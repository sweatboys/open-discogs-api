/*
 * This file is generated by jOOQ.
 */
package io.dsub.opendiscogs.jooq.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MasterArtist implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Integer artistId;
    private final Integer masterId;
    private final LocalDateTime updatedAt;

    public MasterArtist(MasterArtist value) {
        this.artistId = value.artistId;
        this.masterId = value.masterId;
        this.updatedAt = value.updatedAt;
    }

    public MasterArtist(
        Integer artistId,
        Integer masterId,
        LocalDateTime updatedAt
    ) {
        this.artistId = artistId;
        this.masterId = masterId;
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for <code>public.master_artist.artist_id</code>.
     */
    public Integer getArtistId() {
        return this.artistId;
    }

    /**
     * Getter for <code>public.master_artist.master_id</code>.
     */
    public Integer getMasterId() {
        return this.masterId;
    }

    /**
     * Getter for <code>public.master_artist.updated_at</code>. created time
     */
    public LocalDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final MasterArtist other = (MasterArtist) obj;
        if (this.artistId == null) {
            if (other.artistId != null)
                return false;
        }
        else if (!this.artistId.equals(other.artistId))
            return false;
        if (this.masterId == null) {
            if (other.masterId != null)
                return false;
        }
        else if (!this.masterId.equals(other.masterId))
            return false;
        if (this.updatedAt == null) {
            if (other.updatedAt != null)
                return false;
        }
        else if (!this.updatedAt.equals(other.updatedAt))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.artistId == null) ? 0 : this.artistId.hashCode());
        result = prime * result + ((this.masterId == null) ? 0 : this.masterId.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("MasterArtist (");

        sb.append(artistId);
        sb.append(", ").append(masterId);
        sb.append(", ").append(updatedAt);

        sb.append(")");
        return sb.toString();
    }
}
