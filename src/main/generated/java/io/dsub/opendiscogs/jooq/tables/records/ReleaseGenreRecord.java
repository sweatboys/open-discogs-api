/*
 * This file is generated by jOOQ.
 */
package io.dsub.opendiscogs.jooq.tables.records;


import io.dsub.opendiscogs.jooq.tables.ReleaseGenre;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReleaseGenreRecord extends UpdatableRecordImpl<ReleaseGenreRecord> implements Record3<Integer, Integer, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.release_genre.release_id</code>.
     */
    public ReleaseGenreRecord setReleaseId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.release_genre.release_id</code>.
     */
    public Integer getReleaseId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.release_genre.genre_id</code>.
     */
    public ReleaseGenreRecord setGenreId(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.release_genre.genre_id</code>.
     */
    public Integer getGenreId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.release_genre.updated_at</code>. created time
     */
    public ReleaseGenreRecord setUpdatedAt(LocalDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.release_genre.updated_at</code>. created time
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, Integer, LocalDateTime> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, Integer, LocalDateTime> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return ReleaseGenre.RELEASE_GENRE.RELEASE_ID;
    }

    @Override
    public Field<Integer> field2() {
        return ReleaseGenre.RELEASE_GENRE.GENRE_ID;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return ReleaseGenre.RELEASE_GENRE.UPDATED_AT;
    }

    @Override
    public Integer component1() {
        return getReleaseId();
    }

    @Override
    public Integer component2() {
        return getGenreId();
    }

    @Override
    public LocalDateTime component3() {
        return getUpdatedAt();
    }

    @Override
    public Integer value1() {
        return getReleaseId();
    }

    @Override
    public Integer value2() {
        return getGenreId();
    }

    @Override
    public LocalDateTime value3() {
        return getUpdatedAt();
    }

    @Override
    public ReleaseGenreRecord value1(Integer value) {
        setReleaseId(value);
        return this;
    }

    @Override
    public ReleaseGenreRecord value2(Integer value) {
        setGenreId(value);
        return this;
    }

    @Override
    public ReleaseGenreRecord value3(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public ReleaseGenreRecord values(Integer value1, Integer value2, LocalDateTime value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ReleaseGenreRecord
     */
    public ReleaseGenreRecord() {
        super(ReleaseGenre.RELEASE_GENRE);
    }

    /**
     * Create a detached, initialised ReleaseGenreRecord
     */
    public ReleaseGenreRecord(Integer releaseId, Integer genreId, LocalDateTime updatedAt) {
        super(ReleaseGenre.RELEASE_GENRE);

        setReleaseId(releaseId);
        setGenreId(genreId);
        setUpdatedAt(updatedAt);
    }

    /**
     * Create a detached, initialised ReleaseGenreRecord
     */
    public ReleaseGenreRecord(io.dsub.opendiscogs.jooq.tables.pojos.ReleaseGenre value) {
        super(ReleaseGenre.RELEASE_GENRE);

        if (value != null) {
            setReleaseId(value.getReleaseId());
            setGenreId(value.getGenreId());
            setUpdatedAt(value.getUpdatedAt());
        }
    }
}
