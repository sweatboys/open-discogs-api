/*
 * This file is generated by jOOQ.
 */
package io.dsub.opendiscogs.jooq.tables.records;


import io.dsub.opendiscogs.jooq.tables.Artist;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ArtistRecord extends UpdatableRecordImpl<ArtistRecord> implements Record5<Integer, String, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.artist.id</code>.
     */
    public ArtistRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.artist.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.artist.data_quality</code>.
     */
    public ArtistRecord setDataQuality(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.artist.data_quality</code>.
     */
    public String getDataQuality() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.artist.name</code>.
     */
    public ArtistRecord setName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.artist.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.artist.profile</code>.
     */
    public ArtistRecord setProfile(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.artist.profile</code>.
     */
    public String getProfile() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.artist.real_name</code>.
     */
    public ArtistRecord setRealName(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.artist.real_name</code>.
     */
    public String getRealName() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, String, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, String, String, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Artist.ARTIST.ID;
    }

    @Override
    public Field<String> field2() {
        return Artist.ARTIST.DATA_QUALITY;
    }

    @Override
    public Field<String> field3() {
        return Artist.ARTIST.NAME;
    }

    @Override
    public Field<String> field4() {
        return Artist.ARTIST.PROFILE;
    }

    @Override
    public Field<String> field5() {
        return Artist.ARTIST.REAL_NAME;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getDataQuality();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public String component4() {
        return getProfile();
    }

    @Override
    public String component5() {
        return getRealName();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getDataQuality();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public String value4() {
        return getProfile();
    }

    @Override
    public String value5() {
        return getRealName();
    }

    @Override
    public ArtistRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public ArtistRecord value2(String value) {
        setDataQuality(value);
        return this;
    }

    @Override
    public ArtistRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public ArtistRecord value4(String value) {
        setProfile(value);
        return this;
    }

    @Override
    public ArtistRecord value5(String value) {
        setRealName(value);
        return this;
    }

    @Override
    public ArtistRecord values(Integer value1, String value2, String value3, String value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ArtistRecord
     */
    public ArtistRecord() {
        super(Artist.ARTIST);
    }

    /**
     * Create a detached, initialised ArtistRecord
     */
    public ArtistRecord(Integer id, String dataQuality, String name, String profile, String realName) {
        super(Artist.ARTIST);

        setId(id);
        setDataQuality(dataQuality);
        setName(name);
        setProfile(profile);
        setRealName(realName);
    }

    /**
     * Create a detached, initialised ArtistRecord
     */
    public ArtistRecord(io.dsub.opendiscogs.jooq.tables.pojos.Artist value) {
        super(Artist.ARTIST);

        if (value != null) {
            setId(value.getId());
            setDataQuality(value.getDataQuality());
            setName(value.getName());
            setProfile(value.getProfile());
            setRealName(value.getRealName());
        }
    }
}
