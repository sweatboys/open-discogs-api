/*
 * This file is generated by jOOQ.
 */
package io.dsub.opendiscogs.jooq.tables.records;


import io.dsub.opendiscogs.jooq.tables.ArtistUrl;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ArtistUrlRecord extends UpdatableRecordImpl<ArtistUrlRecord> implements Record4<Integer, Long, String, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.artist_url.artist_id</code>.
     */
    public ArtistUrlRecord setArtistId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.artist_url.artist_id</code>.
     */
    public Integer getArtistId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.artist_url.url_hash</code>. fnv32 encoded hash
     * from url
     */
    public ArtistUrlRecord setUrlHash(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.artist_url.url_hash</code>. fnv32 encoded hash
     * from url
     */
    public Long getUrlHash() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.artist_url.url</code>.
     */
    public ArtistUrlRecord setUrl(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.artist_url.url</code>.
     */
    public String getUrl() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.artist_url.updated_at</code>. created time
     */
    public ArtistUrlRecord setUpdatedAt(LocalDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.artist_url.updated_at</code>. created time
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Long, String, LocalDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, Long, String, LocalDateTime> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return ArtistUrl.ARTIST_URL.ARTIST_ID;
    }

    @Override
    public Field<Long> field2() {
        return ArtistUrl.ARTIST_URL.URL_HASH;
    }

    @Override
    public Field<String> field3() {
        return ArtistUrl.ARTIST_URL.URL;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return ArtistUrl.ARTIST_URL.UPDATED_AT;
    }

    @Override
    public Integer component1() {
        return getArtistId();
    }

    @Override
    public Long component2() {
        return getUrlHash();
    }

    @Override
    public String component3() {
        return getUrl();
    }

    @Override
    public LocalDateTime component4() {
        return getUpdatedAt();
    }

    @Override
    public Integer value1() {
        return getArtistId();
    }

    @Override
    public Long value2() {
        return getUrlHash();
    }

    @Override
    public String value3() {
        return getUrl();
    }

    @Override
    public LocalDateTime value4() {
        return getUpdatedAt();
    }

    @Override
    public ArtistUrlRecord value1(Integer value) {
        setArtistId(value);
        return this;
    }

    @Override
    public ArtistUrlRecord value2(Long value) {
        setUrlHash(value);
        return this;
    }

    @Override
    public ArtistUrlRecord value3(String value) {
        setUrl(value);
        return this;
    }

    @Override
    public ArtistUrlRecord value4(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public ArtistUrlRecord values(Integer value1, Long value2, String value3, LocalDateTime value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ArtistUrlRecord
     */
    public ArtistUrlRecord() {
        super(ArtistUrl.ARTIST_URL);
    }

    /**
     * Create a detached, initialised ArtistUrlRecord
     */
    public ArtistUrlRecord(Integer artistId, Long urlHash, String url, LocalDateTime updatedAt) {
        super(ArtistUrl.ARTIST_URL);

        setArtistId(artistId);
        setUrlHash(urlHash);
        setUrl(url);
        setUpdatedAt(updatedAt);
    }

    /**
     * Create a detached, initialised ArtistUrlRecord
     */
    public ArtistUrlRecord(io.dsub.opendiscogs.jooq.tables.pojos.ArtistUrl value) {
        super(ArtistUrl.ARTIST_URL);

        if (value != null) {
            setArtistId(value.getArtistId());
            setUrlHash(value.getUrlHash());
            setUrl(value.getUrl());
            setUpdatedAt(value.getUpdatedAt());
        }
    }
}
