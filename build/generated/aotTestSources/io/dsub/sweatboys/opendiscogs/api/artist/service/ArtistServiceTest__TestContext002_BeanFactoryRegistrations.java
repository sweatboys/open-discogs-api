package io.dsub.sweatboys.opendiscogs.api.artist.service;

import io.dsub.sweatboys.opendiscogs.api.OpenDiscogsApiApplication__TestContext002_BeanDefinitions;
import io.dsub.sweatboys.opendiscogs.api.artist.infrastructure.ArtistR2dbcRepository__TestContext002_BeanDefinitions;
import org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator__TestContext002_BeanDefinitions;
import org.springframework.beans.factory.support.DefaultListableBeanFactory;
import org.springframework.boot.autoconfigure.AutoConfigurationPackages__TestContext002_BeanDefinitions;
import org.springframework.boot.autoconfigure.data.r2dbc.R2dbcDataAutoConfiguration__TestContext002_BeanDefinitions;
import org.springframework.boot.autoconfigure.data.r2dbc.R2dbcRepositoriesAutoConfiguration__TestContext002_BeanDefinitions;
import org.springframework.boot.autoconfigure.r2dbc.ConnectionFactoryConfigurations__TestContext002_BeanDefinitions;
import org.springframework.boot.autoconfigure.r2dbc.ConnectionFactoryDependentConfiguration__TestContext002_BeanDefinitions;
import org.springframework.boot.autoconfigure.r2dbc.R2dbcAutoConfiguration__TestContext002_BeanDefinitions;
import org.springframework.boot.autoconfigure.r2dbc.R2dbcProperties__TestContext002_BeanDefinitions;
import org.springframework.boot.autoconfigure.r2dbc.R2dbcTransactionManagerAutoConfiguration__TestContext002_BeanDefinitions;
import org.springframework.boot.autoconfigure.sql.init.R2dbcInitializationConfiguration__TestContext002_BeanDefinitions;
import org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration__TestContext002_BeanDefinitions;
import org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties__TestContext002_BeanDefinitions;
import org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration__TestContext002_BeanDefinitions;
import org.springframework.boot.autoconfigure.transaction.TransactionProperties__TestContext002_BeanDefinitions;
import org.springframework.boot.context.properties.BoundConfigurationProperties__TestContext002_BeanDefinitions;
import org.springframework.boot.context.properties.ConfigurationPropertiesBinder__TestContext002_BeanDefinitions;
import org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor__TestContext002_BeanDefinitions;
import org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer__TestContext002_BeanDefinitions;
import org.springframework.boot.test.context.ImportsContextCustomizer__TestContext002_BeanDefinitions;
import org.springframework.boot.test.mock.mockito.MockitoPostProcessor__TestContext002_BeanDefinitions;
import org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter__TestContext002_BeanDefinitions;
import org.springframework.context.event.DefaultEventListenerFactory__TestContext002_BeanDefinitions;
import org.springframework.context.event.EventListenerMethodProcessor__TestContext002_BeanDefinitions;
import org.springframework.data.repository.core.support.PropertiesBasedNamedQueries__TestContext002_BeanDefinitions;
import org.springframework.data.repository.core.support.RepositoryComposition__TestContext002_BeanDefinitions;
import org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration__TestContext002_BeanDefinitions;
import org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration__TestContext002_BeanDefinitions;

/**
 * Register bean definitions for the bean factory.
 */
public class ArtistServiceTest__TestContext002_BeanFactoryRegistrations {
  /**
   * Register the bean definitions.
   */
  public void registerBeanDefinitions(DefaultListableBeanFactory beanFactory) {
    beanFactory.registerBeanDefinition("org.springframework.context.event.internalEventListenerProcessor", EventListenerMethodProcessor__TestContext002_BeanDefinitions.getInternalEventListenerProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.context.event.internalEventListenerFactory", DefaultEventListenerFactory__TestContext002_BeanDefinitions.getInternalEventListenerFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.test.context.ImportsContextCustomizer$ImportsCleanupPostProcessor", ImportsContextCustomizer__TestContext002_BeanDefinitions.ImportsCleanupPostProcessor__BeanDefinitions.getImportsCleanupPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.test.mock.mockito.MockitoPostProcessor$SpyPostProcessor", MockitoPostProcessor__TestContext002_BeanDefinitions.SpyPostProcessor__BeanDefinitions.getSpyPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.test.mock.mockito.MockitoPostProcessor", MockitoPostProcessor__TestContext002_BeanDefinitions.getMockitoPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("openDiscogsApiApplication", OpenDiscogsApiApplication__TestContext002_BeanDefinitions.getOpenDiscogsApiApplicationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.AutoConfigurationPackages", AutoConfigurationPackages__TestContext002_BeanDefinitions.BasePackages__BeanDefinitions.getAutoConfigurationPackagesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.r2dbc.ConnectionFactoryConfigurations$PoolConfiguration$PooledConnectionFactoryConfiguration", ConnectionFactoryConfigurations__TestContext002_BeanDefinitions.PoolConfiguration__BeanDefinitions.PooledConnectionFactoryConfiguration__BeanDefinitions.getPooledConnectionFactoryConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("connectionFactory", ConnectionFactoryConfigurations__TestContext002_BeanDefinitions.PoolConfiguration__BeanDefinitions.PooledConnectionFactoryConfiguration__BeanDefinitions.getConnectionFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.r2dbc.ConnectionFactoryConfigurations$PoolConfiguration", ConnectionFactoryConfigurations__TestContext002_BeanDefinitions.PoolConfiguration__BeanDefinitions.getPoolConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.r2dbc.ConnectionFactoryDependentConfiguration", ConnectionFactoryDependentConfiguration__TestContext002_BeanDefinitions.getConnectionFactoryDependentConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("r2dbcDatabaseClient", ConnectionFactoryDependentConfiguration__TestContext002_BeanDefinitions.getRdbcDatabaseClientBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.r2dbc.R2dbcAutoConfiguration", R2dbcAutoConfiguration__TestContext002_BeanDefinitions.getRdbcAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor", ConfigurationPropertiesBindingPostProcessor__TestContext002_BeanDefinitions.getConfigurationPropertiesBindingPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.internalConfigurationPropertiesBinderFactory", ConfigurationPropertiesBinder__TestContext002_BeanDefinitions.Factory__BeanDefinitions.getInternalConfigurationPropertiesBinderFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.internalConfigurationPropertiesBinder", ConfigurationPropertiesBinder__TestContext002_BeanDefinitions.getInternalConfigurationPropertiesBinderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.properties.BoundConfigurationProperties", BoundConfigurationProperties__TestContext002_BeanDefinitions.getBoundConfigurationPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter", MethodValidationExcludeFilter__TestContext002_BeanDefinitions.getMethodValidationExcludeFilterBeanDefinition());
    beanFactory.registerBeanDefinition("spring.r2dbc-org.springframework.boot.autoconfigure.r2dbc.R2dbcProperties", R2dbcProperties__TestContext002_BeanDefinitions.getRdbcPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.data.r2dbc.R2dbcDataAutoConfiguration", R2dbcDataAutoConfiguration__TestContext002_BeanDefinitions.getRdbcDataAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("r2dbcEntityTemplate", R2dbcDataAutoConfiguration__TestContext002_BeanDefinitions.getRdbcEntityTemplateBeanDefinition());
    beanFactory.registerBeanDefinition("r2dbcManagedTypes", R2dbcDataAutoConfiguration__TestContext002_BeanDefinitions.getRdbcManagedTypesBeanDefinition());
    beanFactory.registerBeanDefinition("r2dbcMappingContext", R2dbcDataAutoConfiguration__TestContext002_BeanDefinitions.getRdbcMappingContextBeanDefinition());
    beanFactory.registerBeanDefinition("r2dbcConverter", R2dbcDataAutoConfiguration__TestContext002_BeanDefinitions.getRdbcConverterBeanDefinition());
    beanFactory.registerBeanDefinition("r2dbcCustomConversions", R2dbcDataAutoConfiguration__TestContext002_BeanDefinitions.getRdbcCustomConversionsBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.data.r2dbc.R2dbcRepositoriesAutoConfiguration", R2dbcRepositoriesAutoConfiguration__TestContext002_BeanDefinitions.getRdbcRepositoriesAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("r2dbc.named-queries#0", PropertiesBasedNamedQueries__TestContext002_BeanDefinitions.getNamedqueriesBeanDefinition());
    beanFactory.registerBeanDefinition("r2dbc.ArtistR2dbcRepository.fragments#0", RepositoryComposition__TestContext002_BeanDefinitions.RepositoryFragments__BeanDefinitions.getFragmentsBeanDefinition());
    beanFactory.registerBeanDefinition("artistR2dbcRepository", ArtistR2dbcRepository__TestContext002_BeanDefinitions.getArtistRdbcRepositoryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.sql.init.R2dbcInitializationConfiguration", R2dbcInitializationConfiguration__TestContext002_BeanDefinitions.getRdbcInitializationConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("r2dbcScriptDatabaseInitializer", R2dbcInitializationConfiguration__TestContext002_BeanDefinitions.getRdbcScriptDatabaseInitializerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration", SqlInitializationAutoConfiguration__TestContext002_BeanDefinitions.getSqlInitializationAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties", SqlInitializationProperties__TestContext002_BeanDefinitions.getSqlInitializationPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor", DatabaseInitializationDependencyConfigurer__TestContext002_BeanDefinitions.DependsOnDatabaseInitializationPostProcessor__BeanDefinitions.getDependsOnDatabaseInitializationPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.r2dbc.R2dbcTransactionManagerAutoConfiguration", R2dbcTransactionManagerAutoConfiguration__TestContext002_BeanDefinitions.getRdbcTransactionManagerAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("connectionFactoryTransactionManager", R2dbcTransactionManagerAutoConfiguration__TestContext002_BeanDefinitions.getConnectionFactoryTransactionManagerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration", ProxyTransactionManagementConfiguration__TestContext002_BeanDefinitions.getProxyTransactionManagementConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.transaction.config.internalTransactionAdvisor", ProxyTransactionManagementConfiguration__TestContext002_BeanDefinitions.getInternalTransactionAdvisorBeanDefinition());
    beanFactory.registerBeanDefinition("transactionAttributeSource", ProxyTransactionManagementConfiguration__TestContext002_BeanDefinitions.getTransactionAttributeSourceBeanDefinition());
    beanFactory.registerBeanDefinition("transactionInterceptor", ProxyTransactionManagementConfiguration__TestContext002_BeanDefinitions.getTransactionInterceptorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.transaction.config.internalTransactionalEventListenerFactory", AbstractTransactionManagementConfiguration__TestContext002_BeanDefinitions.getInternalTransactionalEventListenerFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration", TransactionAutoConfiguration__TestContext002_BeanDefinitions.EnableTransactionManagementConfiguration__BeanDefinitions.CglibAutoProxyConfiguration__BeanDefinitions.getCglibAutoProxyConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.aop.config.internalAutoProxyCreator", InfrastructureAdvisorAutoProxyCreator__TestContext002_BeanDefinitions.getInternalAutoProxyCreatorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration", TransactionAutoConfiguration__TestContext002_BeanDefinitions.EnableTransactionManagementConfiguration__BeanDefinitions.getEnableTransactionManagementConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration", TransactionAutoConfiguration__TestContext002_BeanDefinitions.getTransactionAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("platformTransactionManagerCustomizers", TransactionAutoConfiguration__TestContext002_BeanDefinitions.getPlatformTransactionManagerCustomizersBeanDefinition());
    beanFactory.registerBeanDefinition("transactionalOperator", TransactionAutoConfiguration__TestContext002_BeanDefinitions.getTransactionalOperatorBeanDefinition());
    beanFactory.registerBeanDefinition("spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties", TransactionProperties__TestContext002_BeanDefinitions.getTransactionPropertiesBeanDefinition());
  }

  /**
   * Register the aliases.
   */
  public void registerAliases(DefaultListableBeanFactory beanFactory) {
  }
}
