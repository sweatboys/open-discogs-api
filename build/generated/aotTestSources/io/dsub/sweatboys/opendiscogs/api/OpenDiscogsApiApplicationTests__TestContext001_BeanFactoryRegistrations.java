package io.dsub.sweatboys.opendiscogs.api;

import io.dsub.sweatboys.opendiscogs.api.artist.controller.ArtistController__TestContext001_BeanDefinitions;
import io.dsub.sweatboys.opendiscogs.api.artist.infrastructure.ArtistR2dbcRepository__TestContext001_BeanDefinitions;
import io.dsub.sweatboys.opendiscogs.api.artist.infrastructure.ArtistRepositoryImpl__TestContext001_BeanDefinitions;
import io.dsub.sweatboys.opendiscogs.api.artist.service.ArtistService__TestContext001_BeanDefinitions;
import io.dsub.sweatboys.opendiscogs.api.config.DatabaseConfiguration__TestContext001_BeanDefinitions;
import io.dsub.sweatboys.opendiscogs.api.config.PageableWebFluxConfiguration__TestContext001_BeanDefinitions;
import io.dsub.sweatboys.opendiscogs.api.exception.ValidationExceptionHandler__TestContext001_BeanDefinitions;
import org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator__TestContext001_BeanDefinitions;
import org.springframework.beans.factory.support.DefaultListableBeanFactory;
import org.springframework.boot.autoconfigure.AutoConfigurationPackages__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.aop.AopAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.codec.CodecProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.context.LifecycleProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.data.r2dbc.R2dbcDataAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.data.r2dbc.R2dbcRepositoriesAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.info.ProjectInfoProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.jackson.JacksonProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.DataSourceProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.netty.NettyProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.r2dbc.ConnectionFactoryDependentConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.r2dbc.R2dbcAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.r2dbc.R2dbcProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.r2dbc.R2dbcTransactionManagerAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.sql.init.R2dbcInitializationConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskExecutionProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskSchedulingProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.transaction.TransactionProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.ServerProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.WebProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.reactive.ReactiveMultipartAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.reactive.ReactiveMultipartProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.reactive.WebSessionIdResolverAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.reactive.error.ErrorWebFluxAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.context.properties.BoundConfigurationProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.context.properties.ConfigurationPropertiesBinder__TestContext001_BeanDefinitions;
import org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor__TestContext001_BeanDefinitions;
import org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer__TestContext001_BeanDefinitions;
import org.springframework.boot.test.mock.mockito.MockitoPostProcessor__TestContext001_BeanDefinitions;
import org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter__TestContext001_BeanDefinitions;
import org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor__TestContext001_BeanDefinitions;
import org.springframework.context.event.DefaultEventListenerFactory__TestContext001_BeanDefinitions;
import org.springframework.context.event.EventListenerMethodProcessor__TestContext001_BeanDefinitions;
import org.springframework.data.repository.core.support.PropertiesBasedNamedQueries__TestContext001_BeanDefinitions;
import org.springframework.data.repository.core.support.RepositoryComposition__TestContext001_BeanDefinitions;
import org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration__TestContext001_BeanDefinitions;
import org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration__TestContext001_BeanDefinitions;
import org.springframework.web.reactive.config.WebFluxConfigurationSupport__TestContext001_BeanDefinitions;

/**
 * Register bean definitions for the bean factory.
 */
public class OpenDiscogsApiApplicationTests__TestContext001_BeanFactoryRegistrations {
  /**
   * Register the bean definitions.
   */
  public void registerBeanDefinitions(DefaultListableBeanFactory beanFactory) {
    beanFactory.registerBeanDefinition("org.springframework.boot.test.mock.mockito.MockitoPostProcessor$SpyPostProcessor", MockitoPostProcessor__TestContext001_BeanDefinitions.SpyPostProcessor__BeanDefinitions.getSpyPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.test.mock.mockito.MockitoPostProcessor", MockitoPostProcessor__TestContext001_BeanDefinitions.getMockitoPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.context.event.internalEventListenerProcessor", EventListenerMethodProcessor__TestContext001_BeanDefinitions.getInternalEventListenerProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.context.event.internalEventListenerFactory", DefaultEventListenerFactory__TestContext001_BeanDefinitions.getInternalEventListenerFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("openDiscogsApiApplication", OpenDiscogsApiApplication__TestContext001_BeanDefinitions.getOpenDiscogsApiApplicationBeanDefinition());
    beanFactory.registerBeanDefinition("artistController", ArtistController__TestContext001_BeanDefinitions.getArtistControllerBeanDefinition());
    beanFactory.registerBeanDefinition("artistRepositoryImpl", ArtistRepositoryImpl__TestContext001_BeanDefinitions.getArtistRepositoryImplBeanDefinition());
    beanFactory.registerBeanDefinition("artistService", ArtistService__TestContext001_BeanDefinitions.getArtistServiceBeanDefinition());
    beanFactory.registerBeanDefinition("databaseConfiguration", DatabaseConfiguration__TestContext001_BeanDefinitions.getDatabaseConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("pageableWebFluxConfiguration", PageableWebFluxConfiguration__TestContext001_BeanDefinitions.getPageableWebFluxConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("validationExceptionHandler", ValidationExceptionHandler__TestContext001_BeanDefinitions.getValidationExceptionHandlerBeanDefinition());
    beanFactory.registerBeanDefinition("databaseProperties", DatabaseConfiguration__TestContext001_BeanDefinitions.getDatabasePropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("connectionFactory", DatabaseConfiguration__TestContext001_BeanDefinitions.getConnectionFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.AutoConfigurationPackages", AutoConfigurationPackages__TestContext001_BeanDefinitions.BasePackages__BeanDefinitions.getAutoConfigurationPackagesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration", PropertyPlaceholderAutoConfiguration__TestContext001_BeanDefinitions.getPropertyPlaceholderAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("propertySourcesPlaceholderConfigurer", PropertyPlaceholderAutoConfiguration__TestContext001_BeanDefinitions.getPropertySourcesPlaceholderConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedNetty", ReactiveWebServerFactoryConfiguration__TestContext001_BeanDefinitions.EmbeddedNetty__BeanDefinitions.getEmbeddedNettyBeanDefinition());
    beanFactory.registerBeanDefinition("reactorServerResourceFactory", ReactiveWebServerFactoryConfiguration__TestContext001_BeanDefinitions.EmbeddedNetty__BeanDefinitions.getReactorServerResourceFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("nettyReactiveWebServerFactory", ReactiveWebServerFactoryConfiguration__TestContext001_BeanDefinitions.EmbeddedNetty__BeanDefinitions.getNettyReactiveWebServerFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration", ReactiveWebServerFactoryAutoConfiguration__TestContext001_BeanDefinitions.getReactiveWebServerFactoryAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("reactiveWebServerFactoryCustomizer", ReactiveWebServerFactoryAutoConfiguration__TestContext001_BeanDefinitions.getReactiveWebServerFactoryCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor", ConfigurationPropertiesBindingPostProcessor__TestContext001_BeanDefinitions.getConfigurationPropertiesBindingPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.internalConfigurationPropertiesBinderFactory", ConfigurationPropertiesBinder__TestContext001_BeanDefinitions.Factory__BeanDefinitions.getInternalConfigurationPropertiesBinderFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.internalConfigurationPropertiesBinder", ConfigurationPropertiesBinder__TestContext001_BeanDefinitions.getInternalConfigurationPropertiesBinderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.properties.BoundConfigurationProperties", BoundConfigurationProperties__TestContext001_BeanDefinitions.getBoundConfigurationPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter", MethodValidationExcludeFilter__TestContext001_BeanDefinitions.getMethodValidationExcludeFilterBeanDefinition());
    beanFactory.registerBeanDefinition("server-org.springframework.boot.autoconfigure.web.ServerProperties", ServerProperties__TestContext001_BeanDefinitions.getServerPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("webServerFactoryCustomizerBeanPostProcessor", WebServerFactoryCustomizerBeanPostProcessor__TestContext001_BeanDefinitions.getWebServerFactoryCustomizerBeanPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration", JacksonAutoConfiguration__TestContext001_BeanDefinitions.Jackson2ObjectMapperBuilderCustomizerConfiguration__BeanDefinitions.getJacksonObjectMapperBuilderCustomizerConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("standardJacksonObjectMapperBuilderCustomizer", JacksonAutoConfiguration__TestContext001_BeanDefinitions.Jackson2ObjectMapperBuilderCustomizerConfiguration__BeanDefinitions.getStandardJacksonObjectMapperBuilderCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties", JacksonProperties__TestContext001_BeanDefinitions.getJacksonPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration", JacksonAutoConfiguration__TestContext001_BeanDefinitions.JacksonObjectMapperBuilderConfiguration__BeanDefinitions.getJacksonObjectMapperBuilderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jacksonObjectMapperBuilder", JacksonAutoConfiguration__TestContext001_BeanDefinitions.JacksonObjectMapperBuilderConfiguration__BeanDefinitions.getJacksonObjectMapperBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration", JacksonAutoConfiguration__TestContext001_BeanDefinitions.ParameterNamesModuleConfiguration__BeanDefinitions.getParameterNamesModuleConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("parameterNamesModule", JacksonAutoConfiguration__TestContext001_BeanDefinitions.ParameterNamesModuleConfiguration__BeanDefinitions.getParameterNamesModuleBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration", JacksonAutoConfiguration__TestContext001_BeanDefinitions.JacksonObjectMapperConfiguration__BeanDefinitions.getJacksonObjectMapperConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jacksonObjectMapper", JacksonAutoConfiguration__TestContext001_BeanDefinitions.JacksonObjectMapperConfiguration__BeanDefinitions.getJacksonObjectMapperBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration", JacksonAutoConfiguration__TestContext001_BeanDefinitions.JacksonMixinConfiguration__BeanDefinitions.getJacksonMixinConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jsonMixinModuleEntries", JacksonAutoConfiguration__TestContext001_BeanDefinitions.JacksonMixinConfiguration__BeanDefinitions.getJsonMixinModuleEntriesBeanDefinition());
    beanFactory.registerBeanDefinition("jsonMixinModule", JacksonAutoConfiguration__TestContext001_BeanDefinitions.JacksonMixinConfiguration__BeanDefinitions.getJsonMixinModuleBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration", JacksonAutoConfiguration__TestContext001_BeanDefinitions.getJacksonAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jsonComponentModule", JacksonAutoConfiguration__TestContext001_BeanDefinitions.getJsonComponentModuleBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$DefaultCodecsConfiguration", CodecsAutoConfiguration__TestContext001_BeanDefinitions.DefaultCodecsConfiguration__BeanDefinitions.getDefaultCodecsConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("defaultCodecCustomizer", CodecsAutoConfiguration__TestContext001_BeanDefinitions.DefaultCodecsConfiguration__BeanDefinitions.getDefaultCodecCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$JacksonCodecConfiguration", CodecsAutoConfiguration__TestContext001_BeanDefinitions.JacksonCodecConfiguration__BeanDefinitions.getJacksonCodecConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jacksonCodecCustomizer", CodecsAutoConfiguration__TestContext001_BeanDefinitions.JacksonCodecConfiguration__BeanDefinitions.getJacksonCodecCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration", CodecsAutoConfiguration__TestContext001_BeanDefinitions.getCodecsAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.codec-org.springframework.boot.autoconfigure.codec.CodecProperties", CodecProperties__TestContext001_BeanDefinitions.getCodecPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.reactive.ReactiveMultipartAutoConfiguration", ReactiveMultipartAutoConfiguration__TestContext001_BeanDefinitions.getReactiveMultipartAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("defaultPartHttpMessageReaderCustomizer", ReactiveMultipartAutoConfiguration__TestContext001_BeanDefinitions.getDefaultPartHttpMessageReaderCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("spring.webflux.multipart-org.springframework.boot.autoconfigure.web.reactive.ReactiveMultipartProperties", ReactiveMultipartProperties__TestContext001_BeanDefinitions.getReactiveMultipartPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration", ValidationAutoConfiguration__TestContext001_BeanDefinitions.getValidationAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("defaultValidator", ValidationAutoConfiguration__TestContext001_BeanDefinitions.getDefaultValidatorBeanDefinition());
    beanFactory.registerBeanDefinition("methodValidationPostProcessor", ValidationAutoConfiguration__TestContext001_BeanDefinitions.getMethodValidationPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.reactive.WebSessionIdResolverAutoConfiguration", WebSessionIdResolverAutoConfiguration__TestContext001_BeanDefinitions.getWebSessionIdResolverAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("webSessionIdResolver", WebSessionIdResolverAutoConfiguration__TestContext001_BeanDefinitions.getWebSessionIdResolverBeanDefinition());
    beanFactory.registerBeanDefinition("spring.webflux-org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties", WebFluxProperties__TestContext001_BeanDefinitions.getWebFluxPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.reactive.error.ErrorWebFluxAutoConfiguration", ErrorWebFluxAutoConfiguration__TestContext001_BeanDefinitions.getErrorWebFluxAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("errorWebExceptionHandler", ErrorWebFluxAutoConfiguration__TestContext001_BeanDefinitions.getErrorWebExceptionHandlerBeanDefinition());
    beanFactory.registerBeanDefinition("errorAttributes", ErrorWebFluxAutoConfiguration__TestContext001_BeanDefinitions.getErrorAttributesBeanDefinition());
    beanFactory.registerBeanDefinition("spring.web-org.springframework.boot.autoconfigure.web.WebProperties", WebProperties__TestContext001_BeanDefinitions.getWebPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$EnableWebFluxConfiguration", WebFluxAutoConfiguration__TestContext001_BeanDefinitions.EnableWebFluxConfiguration__BeanDefinitions.getEnableWebFluxConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("webFluxConversionService", WebFluxAutoConfiguration__TestContext001_BeanDefinitions.EnableWebFluxConfiguration__BeanDefinitions.getWebFluxConversionServiceBeanDefinition());
    beanFactory.registerBeanDefinition("webFluxValidator", WebFluxAutoConfiguration__TestContext001_BeanDefinitions.EnableWebFluxConfiguration__BeanDefinitions.getWebFluxValidatorBeanDefinition());
    beanFactory.registerBeanDefinition("localeContextResolver", WebFluxAutoConfiguration__TestContext001_BeanDefinitions.EnableWebFluxConfiguration__BeanDefinitions.getLocaleContextResolverBeanDefinition());
    beanFactory.registerBeanDefinition("webSessionManager", WebFluxAutoConfiguration__TestContext001_BeanDefinitions.EnableWebFluxConfiguration__BeanDefinitions.getWebSessionManagerBeanDefinition());
    beanFactory.registerBeanDefinition("webHandler", WebFluxConfigurationSupport__TestContext001_BeanDefinitions.getWebHandlerBeanDefinition());
    beanFactory.registerBeanDefinition("responseStatusExceptionHandler", WebFluxConfigurationSupport__TestContext001_BeanDefinitions.getResponseStatusExceptionHandlerBeanDefinition());
    beanFactory.registerBeanDefinition("requestMappingHandlerMapping", WebFluxConfigurationSupport__TestContext001_BeanDefinitions.getRequestMappingHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("webFluxContentTypeResolver", WebFluxConfigurationSupport__TestContext001_BeanDefinitions.getWebFluxContentTypeResolverBeanDefinition());
    beanFactory.registerBeanDefinition("routerFunctionMapping", WebFluxConfigurationSupport__TestContext001_BeanDefinitions.getRouterFunctionMappingBeanDefinition());
    beanFactory.registerBeanDefinition("resourceHandlerMapping", WebFluxConfigurationSupport__TestContext001_BeanDefinitions.getResourceHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("resourceUrlProvider", WebFluxConfigurationSupport__TestContext001_BeanDefinitions.getResourceUrlProviderBeanDefinition());
    beanFactory.registerBeanDefinition("requestMappingHandlerAdapter", WebFluxConfigurationSupport__TestContext001_BeanDefinitions.getRequestMappingHandlerAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("serverCodecConfigurer", WebFluxConfigurationSupport__TestContext001_BeanDefinitions.getServerCodecConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("webFluxAdapterRegistry", WebFluxConfigurationSupport__TestContext001_BeanDefinitions.getWebFluxAdapterRegistryBeanDefinition());
    beanFactory.registerBeanDefinition("handlerFunctionAdapter", WebFluxConfigurationSupport__TestContext001_BeanDefinitions.getHandlerFunctionAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("simpleHandlerAdapter", WebFluxConfigurationSupport__TestContext001_BeanDefinitions.getSimpleHandlerAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("webFluxWebSocketHandlerAdapter", WebFluxConfigurationSupport__TestContext001_BeanDefinitions.getWebFluxWebSocketHandlerAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("responseEntityResultHandler", WebFluxConfigurationSupport__TestContext001_BeanDefinitions.getResponseEntityResultHandlerBeanDefinition());
    beanFactory.registerBeanDefinition("responseBodyResultHandler", WebFluxConfigurationSupport__TestContext001_BeanDefinitions.getResponseBodyResultHandlerBeanDefinition());
    beanFactory.registerBeanDefinition("viewResolutionResultHandler", WebFluxConfigurationSupport__TestContext001_BeanDefinitions.getViewResolutionResultHandlerBeanDefinition());
    beanFactory.registerBeanDefinition("serverResponseResultHandler", WebFluxConfigurationSupport__TestContext001_BeanDefinitions.getServerResponseResultHandlerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$WebFluxConfig", WebFluxAutoConfiguration__TestContext001_BeanDefinitions.WebFluxConfig__BeanDefinitions.getWebFluxConfigBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$WelcomePageConfiguration", WebFluxAutoConfiguration__TestContext001_BeanDefinitions.WelcomePageConfiguration__BeanDefinitions.getWelcomePageConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("welcomePageRouterFunctionMapping", WebFluxAutoConfiguration__TestContext001_BeanDefinitions.WelcomePageConfiguration__BeanDefinitions.getWelcomePageRouterFunctionMappingBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration", WebFluxAutoConfiguration__TestContext001_BeanDefinitions.getWebFluxAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration$AnnotationConfig", HttpHandlerAutoConfiguration__TestContext001_BeanDefinitions.AnnotationConfig__BeanDefinitions.getAnnotationConfigBeanDefinition());
    beanFactory.registerBeanDefinition("httpHandler", HttpHandlerAutoConfiguration__TestContext001_BeanDefinitions.AnnotationConfig__BeanDefinitions.getHttpHandlerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration", HttpHandlerAutoConfiguration__TestContext001_BeanDefinitions.getHttpHandlerAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$ClassProxyingConfiguration", AopAutoConfiguration__TestContext001_BeanDefinitions.ClassProxyingConfiguration__BeanDefinitions.getClassProxyingConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("forceAutoProxyCreatorToUseClassProxying", AopAutoConfiguration__TestContext001_BeanDefinitions.ClassProxyingConfiguration__BeanDefinitions.getForceAutoProxyCreatorToUseClassProxyingBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.aop.AopAutoConfiguration", AopAutoConfiguration__TestContext001_BeanDefinitions.getAopAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration", ApplicationAvailabilityAutoConfiguration__TestContext001_BeanDefinitions.getApplicationAvailabilityAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("applicationAvailability", ApplicationAvailabilityAutoConfiguration__TestContext001_BeanDefinitions.getApplicationAvailabilityBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.r2dbc.ConnectionFactoryDependentConfiguration", ConnectionFactoryDependentConfiguration__TestContext001_BeanDefinitions.getConnectionFactoryDependentConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("r2dbcDatabaseClient", ConnectionFactoryDependentConfiguration__TestContext001_BeanDefinitions.getRdbcDatabaseClientBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.r2dbc.R2dbcAutoConfiguration", R2dbcAutoConfiguration__TestContext001_BeanDefinitions.getRdbcAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.r2dbc-org.springframework.boot.autoconfigure.r2dbc.R2dbcProperties", R2dbcProperties__TestContext001_BeanDefinitions.getRdbcPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration", ConfigurationPropertiesAutoConfiguration__TestContext001_BeanDefinitions.getConfigurationPropertiesAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration", LifecycleAutoConfiguration__TestContext001_BeanDefinitions.getLifecycleAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("lifecycleProcessor", LifecycleAutoConfiguration__TestContext001_BeanDefinitions.getLifecycleProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties", LifecycleProperties__TestContext001_BeanDefinitions.getLifecyclePropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration", PersistenceExceptionTranslationAutoConfiguration__TestContext001_BeanDefinitions.getPersistenceExceptionTranslationAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("persistenceExceptionTranslationPostProcessor", PersistenceExceptionTranslationAutoConfiguration__TestContext001_BeanDefinitions.getPersistenceExceptionTranslationPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.data.r2dbc.R2dbcDataAutoConfiguration", R2dbcDataAutoConfiguration__TestContext001_BeanDefinitions.getRdbcDataAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("r2dbcEntityTemplate", R2dbcDataAutoConfiguration__TestContext001_BeanDefinitions.getRdbcEntityTemplateBeanDefinition());
    beanFactory.registerBeanDefinition("r2dbcManagedTypes", R2dbcDataAutoConfiguration__TestContext001_BeanDefinitions.getRdbcManagedTypesBeanDefinition());
    beanFactory.registerBeanDefinition("r2dbcMappingContext", R2dbcDataAutoConfiguration__TestContext001_BeanDefinitions.getRdbcMappingContextBeanDefinition());
    beanFactory.registerBeanDefinition("r2dbcConverter", R2dbcDataAutoConfiguration__TestContext001_BeanDefinitions.getRdbcConverterBeanDefinition());
    beanFactory.registerBeanDefinition("r2dbcCustomConversions", R2dbcDataAutoConfiguration__TestContext001_BeanDefinitions.getRdbcCustomConversionsBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.data.r2dbc.R2dbcRepositoriesAutoConfiguration", R2dbcRepositoriesAutoConfiguration__TestContext001_BeanDefinitions.getRdbcRepositoriesAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("r2dbc.named-queries#0", PropertiesBasedNamedQueries__TestContext001_BeanDefinitions.getNamedqueriesBeanDefinition());
    beanFactory.registerBeanDefinition("r2dbc.ArtistR2dbcRepository.fragments#0", RepositoryComposition__TestContext001_BeanDefinitions.RepositoryFragments__BeanDefinitions.getFragmentsBeanDefinition());
    beanFactory.registerBeanDefinition("artistR2dbcRepository", ArtistR2dbcRepository__TestContext001_BeanDefinitions.getArtistRdbcRepositoryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration", ProjectInfoAutoConfiguration__TestContext001_BeanDefinitions.getProjectInfoAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties", ProjectInfoProperties__TestContext001_BeanDefinitions.getProjectInfoPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration", NettyAutoConfiguration__TestContext001_BeanDefinitions.getNettyAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.netty-org.springframework.boot.autoconfigure.netty.NettyProperties", NettyProperties__TestContext001_BeanDefinitions.getNettyPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.sql.init.R2dbcInitializationConfiguration", R2dbcInitializationConfiguration__TestContext001_BeanDefinitions.getRdbcInitializationConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("r2dbcScriptDatabaseInitializer", R2dbcInitializationConfiguration__TestContext001_BeanDefinitions.getRdbcScriptDatabaseInitializerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration", SqlInitializationAutoConfiguration__TestContext001_BeanDefinitions.getSqlInitializationAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties", SqlInitializationProperties__TestContext001_BeanDefinitions.getSqlInitializationPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor", DatabaseInitializationDependencyConfigurer__TestContext001_BeanDefinitions.DependsOnDatabaseInitializationPostProcessor__BeanDefinitions.getDependsOnDatabaseInitializationPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration", TaskExecutionAutoConfiguration__TestContext001_BeanDefinitions.getTaskExecutionAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("taskExecutorBuilder", TaskExecutionAutoConfiguration__TestContext001_BeanDefinitions.getTaskExecutorBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("applicationTaskExecutor", TaskExecutionAutoConfiguration__TestContext001_BeanDefinitions.getApplicationTaskExecutorBeanDefinition());
    beanFactory.registerBeanDefinition("spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties", TaskExecutionProperties__TestContext001_BeanDefinitions.getTaskExecutionPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration", TaskSchedulingAutoConfiguration__TestContext001_BeanDefinitions.getTaskSchedulingAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("taskSchedulerBuilder", TaskSchedulingAutoConfiguration__TestContext001_BeanDefinitions.getTaskSchedulerBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties", TaskSchedulingProperties__TestContext001_BeanDefinitions.getTaskSchedulingPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration", DataSourceTransactionManagerAutoConfiguration__TestContext001_BeanDefinitions.getDataSourceTransactionManagerAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties", DataSourceProperties__TestContext001_BeanDefinitions.getDataSourcePropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.r2dbc.R2dbcTransactionManagerAutoConfiguration", R2dbcTransactionManagerAutoConfiguration__TestContext001_BeanDefinitions.getRdbcTransactionManagerAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("connectionFactoryTransactionManager", R2dbcTransactionManagerAutoConfiguration__TestContext001_BeanDefinitions.getConnectionFactoryTransactionManagerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration", ProxyTransactionManagementConfiguration__TestContext001_BeanDefinitions.getProxyTransactionManagementConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.transaction.config.internalTransactionAdvisor", ProxyTransactionManagementConfiguration__TestContext001_BeanDefinitions.getInternalTransactionAdvisorBeanDefinition());
    beanFactory.registerBeanDefinition("transactionAttributeSource", ProxyTransactionManagementConfiguration__TestContext001_BeanDefinitions.getTransactionAttributeSourceBeanDefinition());
    beanFactory.registerBeanDefinition("transactionInterceptor", ProxyTransactionManagementConfiguration__TestContext001_BeanDefinitions.getTransactionInterceptorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.transaction.config.internalTransactionalEventListenerFactory", AbstractTransactionManagementConfiguration__TestContext001_BeanDefinitions.getInternalTransactionalEventListenerFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration", TransactionAutoConfiguration__TestContext001_BeanDefinitions.EnableTransactionManagementConfiguration__BeanDefinitions.CglibAutoProxyConfiguration__BeanDefinitions.getCglibAutoProxyConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.aop.config.internalAutoProxyCreator", InfrastructureAdvisorAutoProxyCreator__TestContext001_BeanDefinitions.getInternalAutoProxyCreatorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration", TransactionAutoConfiguration__TestContext001_BeanDefinitions.EnableTransactionManagementConfiguration__BeanDefinitions.getEnableTransactionManagementConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration", TransactionAutoConfiguration__TestContext001_BeanDefinitions.getTransactionAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("platformTransactionManagerCustomizers", TransactionAutoConfiguration__TestContext001_BeanDefinitions.getPlatformTransactionManagerCustomizersBeanDefinition());
    beanFactory.registerBeanDefinition("transactionalOperator", TransactionAutoConfiguration__TestContext001_BeanDefinitions.getTransactionalOperatorBeanDefinition());
    beanFactory.registerBeanDefinition("spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties", TransactionProperties__TestContext001_BeanDefinitions.getTransactionPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$NettyWebServerFactoryCustomizerConfiguration", EmbeddedWebServerFactoryCustomizerAutoConfiguration__TestContext001_BeanDefinitions.NettyWebServerFactoryCustomizerConfiguration__BeanDefinitions.getNettyWebServerFactoryCustomizerConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("nettyWebServerFactoryCustomizer", EmbeddedWebServerFactoryCustomizerAutoConfiguration__TestContext001_BeanDefinitions.NettyWebServerFactoryCustomizerConfiguration__BeanDefinitions.getNettyWebServerFactoryCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration", EmbeddedWebServerFactoryCustomizerAutoConfiguration__TestContext001_BeanDefinitions.getEmbeddedWebServerFactoryCustomizerAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorConfiguration$ReactorNetty", ClientHttpConnectorConfiguration__TestContext001_BeanDefinitions.ReactorNetty__BeanDefinitions.getReactorNettyBeanDefinition());
    beanFactory.registerBeanDefinition("reactorClientHttpConnector", ClientHttpConnectorConfiguration__TestContext001_BeanDefinitions.ReactorNetty__BeanDefinitions.getReactorClientHttpConnectorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorAutoConfiguration", ClientHttpConnectorAutoConfiguration__TestContext001_BeanDefinitions.getClientHttpConnectorAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("clientConnectorCustomizer", ClientHttpConnectorAutoConfiguration__TestContext001_BeanDefinitions.getClientConnectorCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration$WebClientCodecsConfiguration", WebClientAutoConfiguration__TestContext001_BeanDefinitions.WebClientCodecsConfiguration__BeanDefinitions.getWebClientCodecsConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("exchangeStrategiesCustomizer", WebClientAutoConfiguration__TestContext001_BeanDefinitions.WebClientCodecsConfiguration__BeanDefinitions.getExchangeStrategiesCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration", WebClientAutoConfiguration__TestContext001_BeanDefinitions.getWebClientAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("webClientBuilder", WebClientAutoConfiguration__TestContext001_BeanDefinitions.getWebClientBuilderBeanDefinition());
  }

  /**
   * Register the aliases.
   */
  public void registerAliases(DefaultListableBeanFactory beanFactory) {
    beanFactory.registerAlias("applicationTaskExecutor", "taskExecutor");
  }
}
