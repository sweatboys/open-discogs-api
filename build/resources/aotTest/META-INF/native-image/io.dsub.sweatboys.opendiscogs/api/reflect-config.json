[
  {
    "name": "java.lang.reflect.AccessibleObject"
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "platformTransactionManagerCustomizers",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "transactionalOperator",
        "parameterTypes": [
          "org.springframework.transaction.ReactiveTransactionManager"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "clientConnectorCustomizer",
        "parameterTypes": [
          "org.springframework.http.client.reactive.ClientHttpConnector"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Netty",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxKeepAliveRequests",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getMaxKeepAliveRequests",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxInitialLineLength",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "getH2cMaxContentLength",
        "parameterTypes": [ ]
      },
      {
        "name": "setInitialBufferSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setConnectionTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "isValidateHeaders",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxInitialLineLength",
        "parameterTypes": [ ]
      },
      {
        "name": "setIdleTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setH2cMaxContentLength",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "getMaxChunkSize",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxChunkSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "getIdleTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getInitialBufferSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getConnectionTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "setValidateHeaders",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.error.ErrorWebFluxAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      },
      {
        "name": "errorAttributes",
        "parameterTypes": [ ]
      },
      {
        "name": "errorWebExceptionHandler",
        "parameterTypes": [
          "org.springframework.boot.web.reactive.error.ErrorAttributes",
          "org.springframework.boot.autoconfigure.web.WebProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.http.codec.ServerCodecConfigurer",
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Build",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getLocation",
        "parameterTypes": [ ]
      },
      {
        "name": "getEncoding",
        "parameterTypes": [ ]
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "org.springframework.core.io.Resource"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.LifecycleProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setTimeoutPerShutdownPhase",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getTimeoutPerShutdownPhase",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getResource",
        "parameterTypes": [ ]
      },
      {
        "name": "setRelaxedPathChars",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getRemoteip",
        "parameterTypes": [ ]
      },
      {
        "name": "setUseRelativeRedirects",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getThreads",
        "parameterTypes": [ ]
      },
      {
        "name": "getAdditionalTldSkipPatterns",
        "parameterTypes": [ ]
      },
      {
        "name": "setRejectIllegalHeader",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMaxConnections",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setKeepAliveTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setBackgroundProcessorDelay",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "isUseRelativeRedirects",
        "parameterTypes": [ ]
      },
      {
        "name": "getMbeanregistry",
        "parameterTypes": [ ]
      },
      {
        "name": "setProcessorCache",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxSwallowSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setConnectionTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setBasedir",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "setRelaxedQueryChars",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAcceptCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxKeepAliveRequests",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getBackgroundProcessorDelay",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxConnections",
        "parameterTypes": [ ]
      },
      {
        "name": "getBasedir",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxHttpFormPostSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "getConnectionTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getRelaxedQueryChars",
        "parameterTypes": [ ]
      },
      {
        "name": "getRelaxedPathChars",
        "parameterTypes": [ ]
      },
      {
        "name": "getRedirectContextRoot",
        "parameterTypes": [ ]
      },
      {
        "name": "setAdditionalTldSkipPatterns",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getMaxKeepAliveRequests",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxSwallowSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getUriEncoding",
        "parameterTypes": [ ]
      },
      {
        "name": "isRejectIllegalHeader",
        "parameterTypes": [ ]
      },
      {
        "name": "setUriEncoding",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "setRedirectContextRoot",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getKeepAliveTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxHttpFormPostSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getProcessorCache",
        "parameterTypes": [ ]
      },
      {
        "name": "getAccesslog",
        "parameterTypes": [ ]
      },
      {
        "name": "getAcceptCount",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.core.io.InputStreamSource[]",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.projection.SpelEvaluatingMethodInterceptor$TargetWrapper",
    "allPublicMethods": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.annotation.Isolation",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.ConnectionFactoryBeanCreationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.transaction.TransactionDefinition",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.boot.context.config.DelegatingApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizerFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.PropertyNamingStrategies",
    "fields": [
      {
        "name": "KEBAB_CASE"
      },
      {
        "name": "UPPER_SNAKE_CASE"
      },
      {
        "name": "LOWER_CAMEL_CASE"
      },
      {
        "name": "SNAKE_CASE"
      },
      {
        "name": "UPPER_CAMEL_CASE"
      },
      {
        "name": "LOWER_DOT_CASE"
      },
      {
        "name": "LOWER_CASE"
      }
    ]
  },
  {
    "name": "org.springframework.test.context.event.EventPublishingTestExecutionListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.properties.IncompatibleConfigurationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.relational.core.mapping.Column",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.test.context.ImportsContextCustomizerFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizerFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.reactivestreams.Subscriber",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.test.context.web.WebAppConfiguration",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.ConnectionFactoryConfigurations$PoolConfiguration$PooledConnectionFactoryConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "connectionFactory",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.r2dbc.R2dbcProperties",
          "org.springframework.core.io.ResourceLoader",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "io.dsub.sweatboys.opendiscogs.api.artist.infrastructure.ArtistRepositoryImpl$$SpringCGLIB$$0",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$NettyWebServerFactoryCustomizerConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "nettyWebServerFactoryCustomizer",
        "parameterTypes": [
          "org.springframework.core.env.Environment",
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.domain.ExampleMatcher$PropertyValueTransformer",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.r2dbc.mapping.event.AfterSaveCallback",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "applicationAvailability",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.List",
          "org.springframework.boot.context.config.ConfigDataProperties$Activate"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "standardJacksonObjectMapperBuilderCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jooq.NoDslContextBeanFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.r2dbc.dialect.DialectResolver$R2dbcDialectProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.JdbcIndexedSessionRepositoryDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$WebFluxConfig",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.WebProperties",
          "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties",
          "org.springframework.beans.factory.ListableBeanFactory",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.FileSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.test.web.client.TestRestTemplateContextCustomizerFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicLongSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Accesslog",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setDir",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "getDir",
        "parameterTypes": [ ]
      },
      {
        "name": "getPattern",
        "parameterTypes": [ ]
      },
      {
        "name": "setPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSuffix",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSuffix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "setRotate",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isRotate",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BeanNotOfRequiredTypeFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "ch.qos.logback.classic.LoggerContext"
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.HikariDriverConfigurationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.http.codec.support.DefaultClientCodecConfigurer",
    "condition": {
      "typeReachable": "org.springframework.http.codec.CodecConfigurerFactory"
    },
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "webClientBuilder",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Accesslog",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCustomFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "setCustomFormat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setFilename",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIgnorePaths",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "isAppend",
        "parameterTypes": [ ]
      },
      {
        "name": "setFormat",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Accesslog$FORMAT"
        ]
      },
      {
        "name": "setFileDateFormat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAppend",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRetentionPeriod",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getFileDateFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getRetentionPeriod",
        "parameterTypes": [ ]
      },
      {
        "name": "getFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "getFilename",
        "parameterTypes": [ ]
      },
      {
        "name": "getIgnorePaths",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "java.util.Properties",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.EnvironmentPostProcessorApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.ValidationExceptionFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$DefaultCodecsConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "defaultCodecCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.codec.CodecProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.diagnostics.FailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.ClearCachesApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.info.ProjectInfoProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataLocationResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "java.lang.Class"
  },
  {
    "name": "org.springframework.data.r2dbc.mapping.event.BeforeConvertCallback",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.dsub.sweatboys.opendiscogs.api.artist.domain.Artist",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getDataQuality",
        "parameterTypes": [ ]
      },
      {
        "name": "getName",
        "parameterTypes": [ ]
      },
      {
        "name": "getRealName",
        "parameterTypes": [ ]
      },
      {
        "name": "getProfile",
        "parameterTypes": [ ]
      },
      {
        "name": "getId",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem$Factory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getQueueCapacity",
        "parameterTypes": [ ]
      },
      {
        "name": "setQueueCapacity",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getMaxSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeepAlive",
        "parameterTypes": [ ]
      },
      {
        "name": "setKeepAlive",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setCoreSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getCoreSize",
        "parameterTypes": [ ]
      },
      {
        "name": "isAllowCoreThreadTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setAllowCoreThreadTimeout",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "jacksonObjectMapperBuilder",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties$Problemdetails",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.test.graphql.tester.HttpGraphQlTesterContextCustomizerFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.domain.ExampleMatcher$StringMatcher",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Threads",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getWorker",
        "parameterTypes": [ ]
      },
      {
        "name": "getIo",
        "parameterTypes": [ ]
      },
      {
        "name": "setIo",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setWorker",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.domain.Sort$TypedSort",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "isEmpty",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.domain.ExampleMatcher$NullHandler",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.test.context.ContextCustomizerFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$Xa",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDataSourceClassName",
        "parameterTypes": [ ]
      },
      {
        "name": "setProperties",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "getProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "setDataSourceClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.lang.reflect.Method"
  },
  {
    "name": "org.springframework.boot.logging.logback.LogbackLoggingSystem$Factory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.domain.ExampleMatcher$GenericPropertyMatchers",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.PatternParseFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.context.ServerPortInfoApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.codec.CodecProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setLogRequestDetails",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMaxInMemorySize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "getMaxInMemorySize",
        "parameterTypes": [ ]
      },
      {
        "name": "isLogRequestDetails",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizerFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.YamlPropertySourceLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter",
    "allPublicConstructors": true
  },
  {
    "name": "org.reactivestreams.Subscription",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.orm.jpa.JpaDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "io.dsub.sweatboys.opendiscogs.api.OpenDiscogsApiApplication$$SpringCGLIB$$0",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.AnnotationDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataProperties$Activate",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.cloud.CloudPlatform",
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "defaultLifecycleProcessor",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.context.LifecycleProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.builder.ParentContextCloserApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.relational.core.mapping.Table",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.annotation.Propagation",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.boot.SpringApplication",
    "methods": [
      {
        "name": "getWebApplicationType",
        "parameterTypes": [ ]
      },
      {
        "name": "getListeners",
        "parameterTypes": [ ]
      },
      {
        "name": "setListeners",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "setInitializers",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "setHeadless",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getInitializers",
        "parameterTypes": [ ]
      },
      {
        "name": "setAllowCircularReferences",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLazyInitialization",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getSources",
        "parameterTypes": [ ]
      },
      {
        "name": "getResourceLoader",
        "parameterTypes": [ ]
      },
      {
        "name": "getAdditionalProfiles",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnvironmentPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEnvironmentPrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "setAddConversionService",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setBannerMode",
        "parameterTypes": [
          "org.springframework.boot.Banner$Mode"
        ]
      },
      {
        "name": "getApplicationStartup",
        "parameterTypes": [ ]
      },
      {
        "name": "getAllSources",
        "parameterTypes": [ ]
      },
      {
        "name": "setBanner",
        "parameterTypes": [
          "org.springframework.boot.Banner"
        ]
      },
      {
        "name": "setDefaultProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setMainApplicationClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setEnvironment",
        "parameterTypes": [
          "org.springframework.core.env.ConfigurableEnvironment"
        ]
      },
      {
        "name": "setLogStartupInfo",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getMainApplicationClass",
        "parameterTypes": [ ]
      },
      {
        "name": "setApplicationStartup",
        "parameterTypes": [
          "org.springframework.core.metrics.ApplicationStartup"
        ]
      },
      {
        "name": "setBeanNameGenerator",
        "parameterTypes": [
          "org.springframework.beans.factory.support.BeanNameGenerator"
        ]
      },
      {
        "name": "setWebApplicationType",
        "parameterTypes": [
          "org.springframework.boot.WebApplicationType"
        ]
      },
      {
        "name": "setRegisterShutdownHook",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAddCommandLineProperties",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setResourceLoader",
        "parameterTypes": [
          "org.springframework.core.io.ResourceLoader"
        ]
      },
      {
        "name": "setSources",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setApplicationContextFactory",
        "parameterTypes": [
          "org.springframework.boot.ApplicationContextFactory"
        ]
      },
      {
        "name": "setAdditionalProfiles",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setAllowBeanDefinitionOverriding",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "io.dsub.sweatboys.opendiscogs.api.artist.service.ArtistService",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "io.dsub.sweatboys.opendiscogs.api.artist.domain.ArtistRepository"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Reactive$Session",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCookie",
        "parameterTypes": [ ]
      },
      {
        "name": "setTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getTimeout",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.Compression",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getExcludedUserAgents",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMinResponseSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "getMimeTypes",
        "parameterTypes": [ ]
      },
      {
        "name": "getMinResponseSize",
        "parameterTypes": [ ]
      },
      {
        "name": "setExcludedUserAgents",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setMimeTypes",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "getEnabled",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BeanDefinitionOverrideFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.domain.Sort$Direction",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "isDescending",
        "parameterTypes": [ ]
      },
      {
        "name": "isAscending",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "java.lang.Boolean"
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.UnboundConfigurationPropertyFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.reactivestreams.Publisher",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "jacksonObjectMapper",
        "parameterTypes": [
          "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.r2dbc.mapping.event.BeforeSaveCallback",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.R2dbcProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPool",
        "parameterTypes": [ ]
      },
      {
        "name": "isGenerateUniqueName",
        "parameterTypes": [ ]
      },
      {
        "name": "setGenerateUniqueName",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": [ ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUsername",
        "parameterTypes": [ ]
      },
      {
        "name": "getUrl",
        "parameterTypes": [ ]
      },
      {
        "name": "getProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "getPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.context.event.EventListenerMethodProcessor",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.util.CustomCollectionRegistrar",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.rsocket.context.RSocketPortInfoApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.r2dbc.core.binding.BindMarkersFactoryResolver$BuiltInBindMarkersFactoryProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy$Content",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setPaths",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "getPaths",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.context.event.DefaultEventListenerFactory",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.NoUniqueBeanDefinitionFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Jsp",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInitParameters",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "getClassName",
        "parameterTypes": [ ]
      },
      {
        "name": "setRegistered",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getInitParameters",
        "parameterTypes": [ ]
      },
      {
        "name": "getRegistered",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.ReactiveMultipartProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getFileStorageDirectory",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxDiskUsagePerPart",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxInMemorySize",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxInMemorySize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setMaxDiskUsagePerPart",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "getMaxHeadersSize",
        "parameterTypes": [ ]
      },
      {
        "name": "setHeadersCharset",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "getHeadersCharset",
        "parameterTypes": [ ]
      },
      {
        "name": "setFileStorageDirectory",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMaxHeadersSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setMaxParts",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getMaxParts",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.query.ReactiveQueryByExampleExecutor",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.reactive.config.WebFluxConfigurationSupport",
    "queriedMethods": [
      {
        "name": "responseStatusExceptionHandler",
        "parameterTypes": [ ]
      },
      {
        "name": "handlerFunctionAdapter",
        "parameterTypes": [ ]
      },
      {
        "name": "requestMappingHandlerAdapter",
        "parameterTypes": [
          "org.springframework.core.ReactiveAdapterRegistry",
          "org.springframework.http.codec.ServerCodecConfigurer",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.validation.Validator"
        ]
      },
      {
        "name": "webHandler",
        "parameterTypes": [ ]
      },
      {
        "name": "webFluxContentTypeResolver",
        "parameterTypes": [ ]
      },
      {
        "name": "webFluxAdapterRegistry",
        "parameterTypes": [ ]
      },
      {
        "name": "serverCodecConfigurer",
        "parameterTypes": [ ]
      },
      {
        "name": "resourceHandlerMapping",
        "parameterTypes": [
          "org.springframework.web.reactive.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "webFluxWebSocketHandlerAdapter",
        "parameterTypes": [ ]
      },
      {
        "name": "viewResolutionResultHandler",
        "parameterTypes": [
          "org.springframework.core.ReactiveAdapterRegistry",
          "org.springframework.web.reactive.accept.RequestedContentTypeResolver"
        ]
      },
      {
        "name": "routerFunctionMapping",
        "parameterTypes": [
          "org.springframework.http.codec.ServerCodecConfigurer"
        ]
      },
      {
        "name": "simpleHandlerAdapter",
        "parameterTypes": [ ]
      },
      {
        "name": "serverResponseResultHandler",
        "parameterTypes": [
          "org.springframework.http.codec.ServerCodecConfigurer"
        ]
      },
      {
        "name": "responseEntityResultHandler",
        "parameterTypes": [
          "org.springframework.core.ReactiveAdapterRegistry",
          "org.springframework.http.codec.ServerCodecConfigurer",
          "org.springframework.web.reactive.accept.RequestedContentTypeResolver"
        ]
      },
      {
        "name": "resourceUrlProvider",
        "parameterTypes": [ ]
      },
      {
        "name": "requestMappingHandlerMapping",
        "parameterTypes": [
          "org.springframework.web.reactive.accept.RequestedContentTypeResolver"
        ]
      },
      {
        "name": "responseBodyResultHandler",
        "parameterTypes": [
          "org.springframework.core.ReactiveAdapterRegistry",
          "org.springframework.http.codec.ServerCodecConfigurer",
          "org.springframework.web.reactive.accept.RequestedContentTypeResolver"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.util.CustomCollections$VavrCollections",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Shutdown",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setAwaitTermination",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAwaitTerminationPeriod",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "isAwaitTermination",
        "parameterTypes": [ ]
      },
      {
        "name": "getAwaitTerminationPeriod",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.web.config.SpringDataJacksonConfiguration",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.domain.ExampleMatcher$PropertySpecifiers",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getSpecifiers",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigTreeConfigDataLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.FailureAnalysisReporter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationImportFilter",
    "allDeclaredConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.datatype.jdk8.Jdk8Module",
    "condition": {
      "typeReachable": "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.test.context.transaction.TransactionalTestExecutionListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.repository.query.FluentQuery$FetchableFluentQuery",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "persistenceExceptionTranslationPostProcessor",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.netty.NettyProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getLeakDetection",
        "parameterTypes": [ ]
      },
      {
        "name": "setLeakDetection",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.netty.NettyProperties$LeakDetection"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getGit",
        "parameterTypes": [ ]
      },
      {
        "name": "getBuild",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport",
    "allPublicMethods": true,
    "methods": [
      {
        "name": "setLazyInit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setQueryLookupStrategyKey",
        "parameterTypes": [
          "org.springframework.data.repository.query.QueryLookupStrategy$Key"
        ]
      },
      {
        "name": "setRepositoryFragments",
        "parameterTypes": [
          "org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments"
        ]
      },
      {
        "name": "setNamedQueries",
        "parameterTypes": [
          "org.springframework.data.repository.core.NamedQueries"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.R2dbcAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.test.autoconfigure.ConditionReportApplicationContextFailureProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.aopalliance.intercept.Joinpoint",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getStaticPart",
        "parameterTypes": [ ]
      },
      {
        "name": "getThis",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.aopalliance.intercept.Interceptor",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.dsub.sweatboys.opendiscogs.api.config.DatabaseConfiguration$$SpringCGLIB$$0",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "io.dsub.sweatboys.opendiscogs.api.config.DatabaseConfiguration$$SpringCGLIB$$1",
    "allDeclaredConstructors": true
  },
  {
    "name": "io.dsub.sweatboys.opendiscogs.api.config.DatabaseConfiguration$$SpringCGLIB$$2",
    "allDeclaredConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.TokenBufferSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.web.context.MissingWebServerFactoryBeanFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Reactive",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getSession",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataNotFoundFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.ReactiveMultipartAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "defaultPartHttpMessageReaderCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.reactive.ReactiveMultipartProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.BeanFactory",
    "allPublicMethods": true
  },
  {
    "name": "java.util.List"
  },
  {
    "name": "org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "io.dsub.sweatboys.opendiscogs.api.artist.controller.ArtistController",
    "methods": [
      {
        "name": "findArtist",
        "parameterTypes": [
          "org.springframework.data.domain.Pageable"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "io.dsub.sweatboys.opendiscogs.api.artist.service.ArtistService"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "propertySourcesPlaceholderConfigurer",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.test.autoconfigure.data.r2dbc.DataR2dbcTestContextBootstrapper",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.test.context.SpringBootTestContextBootstrapper",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebSessionIdResolverAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties",
          "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties"
        ]
      },
      {
        "name": "webSessionIdResolver",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Threads",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setMax",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getMinSpare",
        "parameterTypes": [ ]
      },
      {
        "name": "setMinSpare",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getMax",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedNetty",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "nettyReactiveWebServerFactory",
        "parameterTypes": [
          "org.springframework.http.client.reactive.ReactorResourceFactory",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "reactorServerResourceFactory",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.embedded.tomcat.ConnectorStartFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.FileEncodingApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.ContextIdApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "java.lang.String"
  },
  {
    "name": "org.springframework.boot.context.config.AnsiOutputApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.properties.BoundConfigurationProperties",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.dsub.sweatboys.opendiscogs.api.artist.infrastructure.ArtistRepositoryImpl",
    "allPublicMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "io.dsub.sweatboys.opendiscogs.api.artist.infrastructure.ArtistR2dbcRepository"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Threads",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getMin",
        "parameterTypes": [ ]
      },
      {
        "name": "setMax",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getIdleTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "setIdleTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getMaxQueueCapacity",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxQueueCapacity",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getAcceptors",
        "parameterTypes": [ ]
      },
      {
        "name": "getSelectors",
        "parameterTypes": [ ]
      },
      {
        "name": "setMin",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setSelectors",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setAcceptors",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getMax",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.env.RandomValuePropertySourceEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.context.ConfigurableWebApplicationContext"
  },
  {
    "name": "org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.test.web.SpringBootTestRandomPortEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.repository.core.RepositoryMetadata",
    "allPublicMethods": true
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicIntegerSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnClassCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.repository.query.QueryByExampleExecutor",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.JspTemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.r2dbc.repository.support.R2dbcRepositoryFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Resource",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setAllowCaching",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isAllowCaching",
        "parameterTypes": [ ]
      },
      {
        "name": "getCacheTtl",
        "parameterTypes": [ ]
      },
      {
        "name": "setCacheTtl",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBinder",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getSeparator",
        "parameterTypes": [ ]
      },
      {
        "name": "setContinueOnError",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSeparator",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUsername",
        "parameterTypes": [ ]
      },
      {
        "name": "getEncoding",
        "parameterTypes": [ ]
      },
      {
        "name": "setDataLocations",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getDataLocations",
        "parameterTypes": [ ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSchemaLocations",
        "parameterTypes": [ ]
      },
      {
        "name": "setPlatform",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "isContinueOnError",
        "parameterTypes": [ ]
      },
      {
        "name": "getPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "getMode",
        "parameterTypes": [ ]
      },
      {
        "name": "setMode",
        "parameterTypes": [
          "org.springframework.boot.sql.init.DatabaseInitializationMode"
        ]
      },
      {
        "name": "getPlatform",
        "parameterTypes": [ ]
      },
      {
        "name": "setSchemaLocations",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.util.MethodInvocationRecorder$DefaultPropertyNameDetectionStrategy",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.DelegatingApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getContent",
        "parameterTypes": [ ]
      },
      {
        "name": "getFixed",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.aop.framework.ProxyProcessorSupport",
    "methods": [
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.StandardConfigDataLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.r2dbc.core.binding.BindMarkersFactoryResolver$BindMarkerFactoryProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceBeanCreationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.aopalliance.intercept.Invocation",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getArguments",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.domain.ExampleMatcher$MatcherConfigurer",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.test.context.ApplicationContextFailureProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "reactiveWebServerFactoryCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.domain.Page",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getTotalElements",
        "parameterTypes": [ ]
      },
      {
        "name": "getTotalPages",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.config.DelegatingWebFluxConfiguration",
    "queriedMethods": [
      {
        "name": "setConfigurers",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ErrorProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setIncludeException",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getIncludeStacktrace",
        "parameterTypes": [ ]
      },
      {
        "name": "setIncludeBindingErrors",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeAttribute"
        ]
      },
      {
        "name": "getIncludeBindingErrors",
        "parameterTypes": [ ]
      },
      {
        "name": "getWhitelabel",
        "parameterTypes": [ ]
      },
      {
        "name": "setIncludeStacktrace",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeAttribute"
        ]
      },
      {
        "name": "getPath",
        "parameterTypes": [ ]
      },
      {
        "name": "setPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isIncludeException",
        "parameterTypes": [ ]
      },
      {
        "name": "getIncludeMessage",
        "parameterTypes": [ ]
      },
      {
        "name": "setIncludeMessage",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeAttribute"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "transactionAttributeSource",
        "parameterTypes": [ ]
      },
      {
        "name": "transactionInterceptor",
        "parameterTypes": [
          "org.springframework.transaction.interceptor.TransactionAttributeSource"
        ]
      },
      {
        "name": "transactionAdvisor",
        "parameterTypes": [
          "org.springframework.transaction.interceptor.TransactionAttributeSource",
          "org.springframework.transaction.interceptor.TransactionInterceptor"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.NoConnectionFactoryBeanFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigTreeConfigDataLocationResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.annotation.Id",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializerDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.test.context.support.DynamicPropertiesContextCustomizerFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BindFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "io.r2dbc.pool.ConnectionPool",
    "methods": [
      {
        "name": "dispose",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "java.lang.Long"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ErrorProperties$Whitelabel",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.liquibase.LiquibaseDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.aopalliance.aop.Advice",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.util.MethodInvocationRecorder$Recorded$ToMapConverter",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.r2dbc.R2dbcRepositoriesAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicBooleanSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "io.dsub.sweatboys.opendiscogs.api.artist.infrastructure.ArtistR2dbcRepository",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.diagnostics.FailureAnalyzers",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.domain.Example",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "getMatcher",
        "parameterTypes": [ ]
      },
      {
        "name": "getProbe",
        "parameterTypes": [ ]
      },
      {
        "name": "getProbeType",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.domain.Slice",
    "methods": [
      {
        "name": "getPageable",
        "parameterTypes": [ ]
      },
      {
        "name": "isFirst",
        "parameterTypes": [ ]
      },
      {
        "name": "getNumberOfElements",
        "parameterTypes": [ ]
      },
      {
        "name": "getNumber",
        "parameterTypes": [ ]
      },
      {
        "name": "getSort",
        "parameterTypes": [ ]
      },
      {
        "name": "getContent",
        "parameterTypes": [ ]
      },
      {
        "name": "getSize",
        "parameterTypes": [ ]
      },
      {
        "name": "isLast",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "java.util.stream.Stream"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setStaticPathPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getProblemdetails",
        "parameterTypes": [ ]
      },
      {
        "name": "getWebjarsPathPattern",
        "parameterTypes": [ ]
      },
      {
        "name": "setWebjarsPathPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "getStaticPathPattern",
        "parameterTypes": [ ]
      },
      {
        "name": "setBasePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getBasePath",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.aop.framework.ProxyConfig",
    "methods": [
      {
        "name": "setProxyTargetClass",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.ConnectionFactoryDependentConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "r2dbcDatabaseClient",
        "parameterTypes": [
          "io.r2dbc.spi.ConnectionFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContextFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.http.client.AbstractClientHttpRequestFactoryWrapper",
    "fields": [
      {
        "name": "requestFactory"
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setConnectionIdleTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getAccesslog",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxHttpFormPostSize",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxHttpFormPostSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "getConnectionIdleTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getThreads",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "jakarta.validation.constraints.Min",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.domain.Sort$Order",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getNullHandling",
        "parameterTypes": [ ]
      },
      {
        "name": "isDescending",
        "parameterTypes": [ ]
      },
      {
        "name": "isAscending",
        "parameterTypes": [ ]
      },
      {
        "name": "getProperty",
        "parameterTypes": [ ]
      },
      {
        "name": "isIgnoreCase",
        "parameterTypes": [ ]
      },
      {
        "name": "getDirection",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.RedisUrlSyntaxFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.domain.Sort$NullHandling",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.r2dbc.repository.support.SimpleR2dbcRepository",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Pool",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getSize",
        "parameterTypes": [ ]
      },
      {
        "name": "setSize",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.NoRepositoryBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.test.context.SpringBootContextLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "io.dsub.sweatboys.opendiscogs.api.config.DatabaseConfiguration",
    "allPublicMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "databaseProperties",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      },
      {
        "name": "connectionFactory",
        "parameterTypes": [
          "io.dsub.sweatboys.opendiscogs.api.config.properties.DatabaseProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.test.context.TestExecutionListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.BackgroundPreinitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getForwardHeadersStrategy",
        "parameterTypes": [ ]
      },
      {
        "name": "setShutdown",
        "parameterTypes": [
          "org.springframework.boot.web.server.Shutdown"
        ]
      },
      {
        "name": "getHttp2",
        "parameterTypes": [ ]
      },
      {
        "name": "getUndertow",
        "parameterTypes": [ ]
      },
      {
        "name": "getShutdown",
        "parameterTypes": [ ]
      },
      {
        "name": "setForwardHeadersStrategy",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties$ForwardHeadersStrategy"
        ]
      },
      {
        "name": "setMaxHttpRequestHeaderSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "getServerHeader",
        "parameterTypes": [ ]
      },
      {
        "name": "setServerHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAddress",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxHttpRequestHeaderSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getServlet",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxHttpHeaderSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "getPort",
        "parameterTypes": [ ]
      },
      {
        "name": "getReactive",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxHttpHeaderSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getSsl",
        "parameterTypes": [ ]
      },
      {
        "name": "getJetty",
        "parameterTypes": [ ]
      },
      {
        "name": "setSsl",
        "parameterTypes": [
          "org.springframework.boot.web.server.Ssl"
        ]
      },
      {
        "name": "setAddress",
        "parameterTypes": [
          "java.net.InetAddress"
        ]
      },
      {
        "name": "getTomcat",
        "parameterTypes": [ ]
      },
      {
        "name": "getError",
        "parameterTypes": [ ]
      },
      {
        "name": "setPort",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getNetty",
        "parameterTypes": [ ]
      },
      {
        "name": "getCompression",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.Cookie",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDomain",
        "parameterTypes": [ ]
      },
      {
        "name": "setPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPath",
        "parameterTypes": [ ]
      },
      {
        "name": "setHttpOnly",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": [ ]
      },
      {
        "name": "setSecure",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getMaxAge",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxAge",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getSameSite",
        "parameterTypes": [ ]
      },
      {
        "name": "setDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSecure",
        "parameterTypes": [ ]
      },
      {
        "name": "getHttpOnly",
        "parameterTypes": [ ]
      },
      {
        "name": "setSameSite",
        "parameterTypes": [
          "org.springframework.boot.web.server.Cookie$SameSite"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.test.context.support.DependencyInjectionTestExecutionListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.mustache.MustacheTemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.orm.jpa.JpaDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.r2dbc.mapping.event.AfterConvertCallback",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "java.util.Collection"
  },
  {
    "name": "org.springframework.boot.logging.logback.ColorConverter",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.data.domain.ExampleMatcher",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getMatchMode",
        "parameterTypes": [ ]
      },
      {
        "name": "isAllMatching",
        "parameterTypes": [ ]
      },
      {
        "name": "getNullHandler",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultStringMatcher",
        "parameterTypes": [ ]
      },
      {
        "name": "getPropertySpecifiers",
        "parameterTypes": [ ]
      },
      {
        "name": "isIgnoreCaseEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "getIgnoredPaths",
        "parameterTypes": [ ]
      },
      {
        "name": "isAnyMatching",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "java.sql.Date",
    "condition": {
      "typeReachable": "java.sql.Date"
    },
    "methods": [
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "toLocalDate",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.util.MethodInvocationRecorder$RecordingMethodInterceptor",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.repository.query.FluentQuery$ReactiveFluentQuery",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.env.PropertySourceLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.repository.core.support.TransactionalRepositoryFactoryBeanSupport",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.test.mock.mockito.MockitoPostProcessor$SpyPostProcessor",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.test.mock.mockito.MockitoPostProcessor"
        ]
      }
    ]
  },
  {
    "name": "io.dsub.sweatboys.opendiscogs.api.config.PageableWebFluxConfiguration",
    "allPublicMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFragment",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.util.MethodInvocationRecorder",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnBeanCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.test.context.web.socket.MockServerContainerContextCustomizerFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.R2dbcTransactionManagerAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "connectionFactoryTransactionManager",
        "parameterTypes": [
          "io.r2dbc.spi.ConnectionFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "taskExecutorBuilder",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "applicationTaskExecutor",
        "parameterTypes": [
          "org.springframework.boot.task.TaskExecutorBuilder"
        ]
      }
    ]
  },
  {
    "name": "java.lang.Object[]"
  },
  {
    "name": "jakarta.validation.constraints.NotNull",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.util.CustomCollections$EclipseCollections",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$EnableWebFluxConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties",
          "org.springframework.boot.autoconfigure.web.WebProperties",
          "org.springframework.boot.autoconfigure.web.ServerProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "webFluxConversionService",
        "parameterTypes": [ ]
      },
      {
        "name": "webFluxValidator",
        "parameterTypes": [ ]
      },
      {
        "name": "localeContextResolver",
        "parameterTypes": [ ]
      },
      {
        "name": "webSessionManager",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.slf4j.bridge.SLF4JBridgeHandler"
  },
  {
    "name": "org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "io.dsub.sweatboys.opendiscogs.api.exception.ValidationExceptionHandler",
    "methods": [
      {
        "name": "handleException",
        "parameterTypes": [
          "java.lang.Exception"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.logging.LoggingSystemFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Shutdown",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setAwaitTermination",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAwaitTerminationPeriod",
        "parameterTypes": [ ]
      },
      {
        "name": "isAwaitTermination",
        "parameterTypes": [ ]
      },
      {
        "name": "setAwaitTerminationPeriod",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "io.dsub.sweatboys.opendiscogs.api.config.PageableWebFluxConfiguration$$SpringCGLIB$$0",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.datatype.jsr310.JavaTimeModule",
    "condition": {
      "typeReachable": "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.http.codec.support.DefaultServerCodecConfigurer",
    "condition": {
      "typeReachable": "org.springframework.http.codec.CodecConfigurerFactory"
    },
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$ClassProxyingConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "forceAutoProxyCreatorToUseClassProxying",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getLocale",
        "parameterTypes": [ ]
      },
      {
        "name": "getLocaleResolver",
        "parameterTypes": [ ]
      },
      {
        "name": "setLocaleResolver",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.WebProperties$LocaleResolver"
        ]
      },
      {
        "name": "getResources",
        "parameterTypes": [ ]
      },
      {
        "name": "setLocale",
        "parameterTypes": [
          "java.util.Locale"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.r2dbc.init.R2dbcScriptDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.domain.ExampleMatcher$PropertySpecifier",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getIgnoreCase",
        "parameterTypes": [ ]
      },
      {
        "name": "getPropertyValueTransformer",
        "parameterTypes": [ ]
      },
      {
        "name": "getStringMatcher",
        "parameterTypes": [ ]
      },
      {
        "name": "getPath",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.core.io.support.PropertiesLoaderSupport",
    "methods": [
      {
        "name": "setLocations",
        "parameterTypes": [
          "org.springframework.core.io.Resource[]"
        ]
      },
      {
        "name": "setIgnoreResourceNotFound",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Options",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getSocket",
        "parameterTypes": [ ]
      },
      {
        "name": "getServer",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.integration.IntegrationPropertiesEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.SpringApplicationRunListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.PortInUseFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionEvaluationReportAutoConfigurationImportListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "taskSchedulerBuilder",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.r2dbc.repository.support.R2dbcRepositoryFactoryBean",
    "methods": [
      {
        "name": "setEntityOperations",
        "parameterTypes": [
          "org.springframework.data.r2dbc.core.R2dbcEntityOperations"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.netty.NettyProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.web.config.SpringDataJacksonModules",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache$Cachecontrol",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getNoStore",
        "parameterTypes": [ ]
      },
      {
        "name": "getMustRevalidate",
        "parameterTypes": [ ]
      },
      {
        "name": "setSMaxAge",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setNoTransform",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getMaxAge",
        "parameterTypes": [ ]
      },
      {
        "name": "getCachePrivate",
        "parameterTypes": [ ]
      },
      {
        "name": "setStaleIfError",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setMaxAge",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setCachePublic",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setCachePrivate",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getStaleIfError",
        "parameterTypes": [ ]
      },
      {
        "name": "setNoCache",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setNoStore",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getNoCache",
        "parameterTypes": [ ]
      },
      {
        "name": "setMustRevalidate",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getCachePublic",
        "parameterTypes": [ ]
      },
      {
        "name": "setProxyRevalidate",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getNoTransform",
        "parameterTypes": [ ]
      },
      {
        "name": "setStaleWhileRevalidate",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getProxyRevalidate",
        "parameterTypes": [ ]
      },
      {
        "name": "getStaleWhileRevalidate",
        "parameterTypes": [ ]
      },
      {
        "name": "getSMaxAge",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.test.context.aot.AotTestAttributes__Generated",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setAddMappings",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getChain",
        "parameterTypes": [ ]
      },
      {
        "name": "isAddMappings",
        "parameterTypes": [ ]
      },
      {
        "name": "getStaticLocations",
        "parameterTypes": [ ]
      },
      {
        "name": "setStaticLocations",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "getCache",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "java.lang.Object",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties$Format",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setDateTime",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDate",
        "parameterTypes": [ ]
      },
      {
        "name": "getTime",
        "parameterTypes": [ ]
      },
      {
        "name": "getDateTime",
        "parameterTypes": [ ]
      },
      {
        "name": "setTime",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.jooq.JooqDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getPool",
        "parameterTypes": [ ]
      },
      {
        "name": "getThreadNamePrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "getShutdown",
        "parameterTypes": [ ]
      },
      {
        "name": "setThreadNamePrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.context.ApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationImportListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.test.context.aot.AotTestContextInitializers__Generated",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BindValidationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "defaultValidator",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "methodValidationPostProcessor",
        "parameterTypes": [
          "org.springframework.core.env.Environment",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.query.FluentQuery",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.domain.ExampleMatcher$NoOpPropertyValueTransformer",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "jsonMixinModule",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.jackson.JsonMixinModuleEntries"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setDecodeUrl",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "isAllowEncodedSlash",
        "parameterTypes": [ ]
      },
      {
        "name": "getAccesslog",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxParameters",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getDirectBuffers",
        "parameterTypes": [ ]
      },
      {
        "name": "isEagerFilterInit",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxHeaders",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setDirectBuffers",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "isAlwaysSetKeepAlive",
        "parameterTypes": [ ]
      },
      {
        "name": "isPreservePathOnForward",
        "parameterTypes": [ ]
      },
      {
        "name": "isDecodeUrl",
        "parameterTypes": [ ]
      },
      {
        "name": "setUrlCharset",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "getMaxHttpPostSize",
        "parameterTypes": [ ]
      },
      {
        "name": "setAllowEncodedSlash",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getBufferSize",
        "parameterTypes": [ ]
      },
      {
        "name": "setEagerFilterInit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getMaxParameters",
        "parameterTypes": [ ]
      },
      {
        "name": "setAlwaysSetKeepAlive",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMaxCookies",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getMaxCookies",
        "parameterTypes": [ ]
      },
      {
        "name": "setNoRequestTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setPreservePathOnForward",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getUrlCharset",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxHttpPostSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "getThreads",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxHeaders",
        "parameterTypes": [ ]
      },
      {
        "name": "getOptions",
        "parameterTypes": [ ]
      },
      {
        "name": "setBufferSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "getNoRequestTimeout",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.batch.JobRepositoryDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.R2dbcInitializationConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "r2dbcScriptDatabaseInitializer",
        "parameterTypes": [
          "io.r2dbc.spi.ConnectionFactory",
          "org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataLocation",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "boolean",
          "java.lang.String",
          "org.springframework.boot.origin.Origin"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isRequestAttributesEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "isBuffered",
        "parameterTypes": [ ]
      },
      {
        "name": "setSuffix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isRenameOnRotate",
        "parameterTypes": [ ]
      },
      {
        "name": "setCheckExists",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIpv6Canonical",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLocale",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDirectory",
        "parameterTypes": [ ]
      },
      {
        "name": "getSuffix",
        "parameterTypes": [ ]
      },
      {
        "name": "getEncoding",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setFileDateFormat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConditionUnless",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isRotate",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxDays",
        "parameterTypes": [ ]
      },
      {
        "name": "getPrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "getPattern",
        "parameterTypes": [ ]
      },
      {
        "name": "setRotate",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getConditionIf",
        "parameterTypes": [ ]
      },
      {
        "name": "setDirectory",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBuffered",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConditionIf",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getFileDateFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "setRenameOnRotate",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRequestAttributesEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getConditionUnless",
        "parameterTypes": [ ]
      },
      {
        "name": "getLocale",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxDays",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "isIpv6Canonical",
        "parameterTypes": [ ]
      },
      {
        "name": "isCheckExists",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.domain.Sort",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "isSorted",
        "parameterTypes": [ ]
      },
      {
        "name": "isEmpty",
        "parameterTypes": [ ]
      },
      {
        "name": "isUnsorted",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.test.context.support.DefaultBootstrapContext",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.http.client.SimpleClientHttpRequestFactory",
    "condition": {
      "typeReachable": "java.net.HttpURLConnection"
    },
    "methods": [
      {
        "name": "setReadTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setBufferRequestBody",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setConnectTimeout",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration$AnnotationConfig",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "httpHandler",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.test.mock.mockito.MockitoPostProcessor",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "name": "org.aopalliance.intercept.MethodInterceptor",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "setRollbackOnCommitFailure",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getRollbackOnCommitFailure",
        "parameterTypes": [ ]
      },
      {
        "name": "setDefaultTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.Ssl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setTrustStoreType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeyStoreProvider",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeyStore",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getProtocol",
        "parameterTypes": [ ]
      },
      {
        "name": "setCertificatePrivateKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getKeyStoreProvider",
        "parameterTypes": [ ]
      },
      {
        "name": "getCertificatePrivateKey",
        "parameterTypes": [ ]
      },
      {
        "name": "getTrustStore",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTrustStorePassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getKeyStorePassword",
        "parameterTypes": [ ]
      },
      {
        "name": "setTrustCertificatePrivateKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTrustCertificatePrivateKey",
        "parameterTypes": [ ]
      },
      {
        "name": "getTrustStorePassword",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setCiphers",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "getKeyPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "setKeyPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTrustStore",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTrustStoreType",
        "parameterTypes": [ ]
      },
      {
        "name": "setTrustCertificate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getKeyStore",
        "parameterTypes": [ ]
      },
      {
        "name": "setKeyStoreType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProtocol",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCertificate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTrustStoreProvider",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTrustCertificate",
        "parameterTypes": [ ]
      },
      {
        "name": "getCertificate",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeyAlias",
        "parameterTypes": [ ]
      },
      {
        "name": "getCiphers",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeyStoreType",
        "parameterTypes": [ ]
      },
      {
        "name": "setKeyStorePassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEnabledProtocols",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "getClientAuth",
        "parameterTypes": [ ]
      },
      {
        "name": "setClientAuth",
        "parameterTypes": [
          "org.springframework.boot.web.server.Ssl$ClientAuth"
        ]
      },
      {
        "name": "getTrustStoreProvider",
        "parameterTypes": [ ]
      },
      {
        "name": "setKeyAlias",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEnabledProtocols",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setCompressed",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCache",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getStrategy",
        "parameterTypes": [ ]
      },
      {
        "name": "isCache",
        "parameterTypes": [ ]
      },
      {
        "name": "isCompressed",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getEnabled",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.util.MethodInvocationRecorder$PropertyNameDetectionStrategy",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.domain.ExampleMatcher$MatchMode",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "io.dsub.sweatboys.opendiscogs.api.artist.domain.Artist$ArtistBuilder",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.properties.NotConstructorBoundInjectionFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration",
    "queriedMethods": [
      {
        "name": "setConfigurers",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "transactionalEventListenerFactory",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.util.MethodInvocationRecorder$Recorded",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getPropertyPath",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$JacksonCodecConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "jacksonCodecCustomizer",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.ObjectMapper"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Mbeanregistry",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.MultipleConnectionPoolConfigurationsFailureAnalzyer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy$Fixed",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "getPaths",
        "parameterTypes": [ ]
      },
      {
        "name": "getVersion",
        "parameterTypes": [ ]
      },
      {
        "name": "setPaths",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.mapping.context.MappingContext",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.DispatcherHandler"
  },
  {
    "name": "io.dsub.sweatboys.opendiscogs.api.OpenDiscogsApiApplication",
    "allPublicMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.ClassSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.flyway.FlywayDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration$WebClientCodecsConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "exchangeStrategiesCustomizer",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BeanCurrentlyInCreationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "reactor.core.publisher.Mono",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.domain.ExampleMatcher$GenericPropertyMatcher",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.java.JavaLoggingSystem$Factory",
    "allDeclaredConstructors": true
  },
  {
    "name": "java.util.Set"
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyValueFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.MutuallyExclusiveConfigurationPropertiesFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "ch.qos.logback.core.rolling.helper.DateTokenConverter",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.web.reactive.socket.server.upgrade.ReactorNettyRequestUpgradeStrategy",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.util.Streamable",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "isEmpty",
        "parameterTypes": [ ]
      },
      {
        "name": "get",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.util.MethodInvocationRecorder$Recorded$ToCollectionConverter",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.test.context.event.ApplicationEventsTestExecutionListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.template.TemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.PropertiesPropertySourceLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.ApplicationContextFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Servlet",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getApplicationDisplayName",
        "parameterTypes": [ ]
      },
      {
        "name": "setRegisterDefaultServlet",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getEncoding",
        "parameterTypes": [ ]
      },
      {
        "name": "getContextPath",
        "parameterTypes": [ ]
      },
      {
        "name": "getSession",
        "parameterTypes": [ ]
      },
      {
        "name": "isRegisterDefaultServlet",
        "parameterTypes": [ ]
      },
      {
        "name": "getJsp",
        "parameterTypes": [ ]
      },
      {
        "name": "setContextPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getContextParameters",
        "parameterTypes": [ ]
      },
      {
        "name": "setApplicationDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Remoteip",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setTrustedProxies",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTrustedProxies",
        "parameterTypes": [ ]
      },
      {
        "name": "setProtocolHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getProtocolHeaderHttpsValue",
        "parameterTypes": [ ]
      },
      {
        "name": "getProtocolHeader",
        "parameterTypes": [ ]
      },
      {
        "name": "setProtocolHeaderHttpsValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemoteIpHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHostHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPortHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getHostHeader",
        "parameterTypes": [ ]
      },
      {
        "name": "getRemoteIpHeader",
        "parameterTypes": [ ]
      },
      {
        "name": "getInternalProxies",
        "parameterTypes": [ ]
      },
      {
        "name": "getPortHeader",
        "parameterTypes": [ ]
      },
      {
        "name": "setInternalProxies",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Encoding",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setCharset",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "isForceResponse",
        "parameterTypes": [ ]
      },
      {
        "name": "isForceRequest",
        "parameterTypes": [ ]
      },
      {
        "name": "getMapping",
        "parameterTypes": [ ]
      },
      {
        "name": "setForce",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isForce",
        "parameterTypes": [ ]
      },
      {
        "name": "setMapping",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setForceRequest",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getCharset",
        "parameterTypes": [ ]
      },
      {
        "name": "setForceResponse",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Session$Cookie",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setComment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getComment",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.R2dbcProperties$Pool",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setValidationDepth",
        "parameterTypes": [
          "io.r2dbc.spi.ValidationDepth"
        ]
      },
      {
        "name": "setInitialSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxLifeTime",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getMaxIdleTime",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getValidationQuery",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxAcquireTime",
        "parameterTypes": [ ]
      },
      {
        "name": "getInitialSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxLifeTime",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxAcquireTime",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setMaxIdleTime",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMaxCreateConnectionTime",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setMaxSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getMaxCreateConnectionTime",
        "parameterTypes": [ ]
      },
      {
        "name": "getValidationDepth",
        "parameterTypes": [ ]
      },
      {
        "name": "setValidationQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDateFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "setDefaultPropertyInclusion",
        "parameterTypes": [
          "com.fasterxml.jackson.annotation.JsonInclude$Include"
        ]
      },
      {
        "name": "getPropertyNamingStrategy",
        "parameterTypes": [ ]
      },
      {
        "name": "getSerialization",
        "parameterTypes": [ ]
      },
      {
        "name": "setDateFormat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPropertyNamingStrategy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLocale",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultPropertyInclusion",
        "parameterTypes": [ ]
      },
      {
        "name": "getTimeZone",
        "parameterTypes": [ ]
      },
      {
        "name": "getMapper",
        "parameterTypes": [ ]
      },
      {
        "name": "getGenerator",
        "parameterTypes": [ ]
      },
      {
        "name": "setLocale",
        "parameterTypes": [
          "java.util.Locale"
        ]
      },
      {
        "name": "getParser",
        "parameterTypes": [ ]
      },
      {
        "name": "getConstructorDetector",
        "parameterTypes": [ ]
      },
      {
        "name": "getVisibility",
        "parameterTypes": [ ]
      },
      {
        "name": "setTimeZone",
        "parameterTypes": [
          "java.util.TimeZone"
        ]
      },
      {
        "name": "getDeserialization",
        "parameterTypes": [ ]
      },
      {
        "name": "setConstructorDetector",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.jackson.JacksonProperties$ConstructorDetectorStrategy"
        ]
      },
      {
        "name": "getDefaultLeniency",
        "parameterTypes": [ ]
      },
      {
        "name": "setDefaultLeniency",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "parameterNamesModule",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.SyslogStartConverter",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFactorySupport",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.util.MethodInvocationRecorder$Unrecorded",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.test.context.support.DirtiesContextTestExecutionListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.context.ApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.server.Http2",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.test.mock.mockito.MockitoContextCustomizerFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.util.MethodInvocationRecorder$InvocationInformation",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getInvokedMethod",
        "parameterTypes": [ ]
      },
      {
        "name": "getRecorded",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.SpringBootExceptionReporter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Git",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getEncoding",
        "parameterTypes": [ ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "org.springframework.core.io.Resource"
        ]
      },
      {
        "name": "getLocation",
        "parameterTypes": [ ]
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.logging.LoggingApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.r2dbc.dialect.DialectResolver$BuiltInDialectProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContextFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.NoSuchMethodFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "java.util.Optional"
  },
  {
    "name": "java.lang.Throwable",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter",
    "queriedMethods": [
      {
        "name": "byAnnotation",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.DatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.StandardConfigDataLocationResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.event.EventPublishingRunListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.quartz.SchedulerDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$WelcomePageConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "welcomePageRouterFunctionMapping",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties",
          "org.springframework.boot.autoconfigure.web.WebProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.env.EnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.ConnectionFactoryConfigurations$PoolConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafTemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.jdbc.SpringJdbcDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCachecontrol",
        "parameterTypes": [ ]
      },
      {
        "name": "isUseLastModified",
        "parameterTypes": [ ]
      },
      {
        "name": "setPeriod",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setUseLastModified",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getPeriod",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.DependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.test.context.ImportsContextCustomizer$ImportsCleanupPostProcessor",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "jakarta.validation.Constraint",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.r2dbc.R2dbcDataAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.r2dbc.core.DatabaseClient"
        ]
      },
      {
        "name": "r2dbcEntityTemplate",
        "parameterTypes": [
          "org.springframework.data.r2dbc.convert.R2dbcConverter"
        ]
      },
      {
        "name": "r2dbcMappingContext",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.data.r2dbc.convert.R2dbcCustomConversions",
          "org.springframework.data.relational.RelationalManagedTypes"
        ]
      },
      {
        "name": "r2dbcCustomConversions",
        "parameterTypes": [ ]
      },
      {
        "name": "r2dbcConverter",
        "parameterTypes": [
          "org.springframework.data.r2dbc.mapping.R2dbcMappingContext",
          "org.springframework.data.r2dbc.convert.R2dbcCustomConversions"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBinder$Factory",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      },
      {
        "name": "getEmbeddedDatabaseConnection",
        "parameterTypes": [ ]
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": [ ]
      },
      {
        "name": "getDriverClassName",
        "parameterTypes": [ ]
      },
      {
        "name": "getType",
        "parameterTypes": [ ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUrl",
        "parameterTypes": [ ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUsername",
        "parameterTypes": [ ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setXa",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$Xa"
        ]
      },
      {
        "name": "setGenerateUniqueName",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getJndiName",
        "parameterTypes": [ ]
      },
      {
        "name": "setDriverClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isGenerateUniqueName",
        "parameterTypes": [ ]
      },
      {
        "name": "setEmbeddedDatabaseConnection",
        "parameterTypes": [
          "org.springframework.boot.jdbc.EmbeddedDatabaseConnection"
        ]
      },
      {
        "name": "getXa",
        "parameterTypes": [ ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "setJndiName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.MissingR2dbcPoolDependencyFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "jsonComponentModule",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.yaml.snakeyaml.Yaml",
    "condition": {
      "typeReachable": "org.springframework.boot.env.YamlPropertySourceLoader"
    }
  },
  {
    "name": "org.springframework.boot.test.web.reactive.server.WebTestClientContextCustomizerFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy",
    "condition": {
      "typeReachable": "org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory"
    },
    "methods": [
      {
        "name": "shutdown",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.aopalliance.intercept.MethodInvocation",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getMethod",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean",
    "allPublicMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorConfiguration$ReactorNetty",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "reactorClientHttpConnector",
        "parameterTypes": [
          "org.springframework.http.client.reactive.ReactorResourceFactory",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.rolling.helper.IntegerTokenConverter",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.reactor.DebugAgentEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.domain.Pageable",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getPageSize",
        "parameterTypes": [ ]
      },
      {
        "name": "isPaged",
        "parameterTypes": [ ]
      },
      {
        "name": "getOffset",
        "parameterTypes": [ ]
      },
      {
        "name": "isUnpaged",
        "parameterTypes": [ ]
      },
      {
        "name": "getSort",
        "parameterTypes": [ ]
      },
      {
        "name": "getPageNumber",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Session",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getStoreDir",
        "parameterTypes": [ ]
      },
      {
        "name": "getTrackingModes",
        "parameterTypes": [ ]
      },
      {
        "name": "getTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "setPersistent",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setStoreDir",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "getCookie",
        "parameterTypes": [ ]
      },
      {
        "name": "setTrackingModes",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "isPersistent",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getThreadNamePrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "getPool",
        "parameterTypes": [ ]
      },
      {
        "name": "getShutdown",
        "parameterTypes": [ ]
      },
      {
        "name": "setThreadNamePrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyNameFailureAnalyzer",
    "allDeclaredConstructors": true
  }
]
