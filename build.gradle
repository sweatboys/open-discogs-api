plugins {
    id 'org.springframework.boot' version '3.0.0'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'java'
    id 'jacoco'
    id 'maven-publish'
    id 'com.google.osdetector' version '1.7.1'
    id 'org.springdoc.openapi-gradle-plugin' version '1.6.0'
    id 'org.graalvm.buildtools.native' version '0.9.19'
}

sourceCompatibility = 17
targetCompatibility = 17

group project.maven_group
version project.artifact_version

repositories {
    maven { url 'https://repo.spring.io/release' }
    mavenCentral()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    if (osdetector.classifier == "aarch_64") {
        implementation 'io.netty:netty-all:4.1.85.Final'
    }

    // spring configuration
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // webflux
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // r2dbc
    implementation 'org.postgresql:r2dbc-postgresql:1.0.0.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'

    // observability from reference: https://spring.io/blog/2022/10/12/observability-with-spring-boot-3
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'io.micrometer:micrometer-tracing-bridge-brave'
    implementation 'io.zipkin.reporter2:zipkin-reporter-brave'
    implementation 'com.github.loki4j:loki-logback-appender:1.3.2'

    // swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.0.0'
    implementation 'org.springdoc:springdoc-openapi-starter-webflux-api:2.0.0'

    // validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // datatype
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    // lombok
    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // testing
    implementation platform('org.testcontainers:testcontainers-bom:1.17.6')
    testImplementation(
            "org.junit.jupiter:junit-jupiter-api:5.9.0",
            'org.springframework.boot:spring-boot-starter-test',
            'org.mockito:mockito-inline:4.8.0',
            'io.projectreactor:reactor-test',
            'org.testcontainers:junit-jupiter',
            'org.testcontainers:postgresql',
            'org.testcontainers:r2dbc',
    )
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.9.0"
    testAnnotationProcessor 'org.projectlombok:lombok'
}

test {
    useJUnitPlatform()
}

check {
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    finalizedBy jacocoTestCoverageVerification
}

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17

/* JACOCO */
jacocoTestReport {
    reports {
        xml.enabled(true)
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = 'CLASS'
            limit {
                counter = 'BRANCH'
                value = 'COVEREDRATIO'
                // minimum = 0.90
            }
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                // minimum = 0.80
            }
            limit {
                counter = 'LINE'
                value = 'TOTALCOUNT'
                // maximum = 200
            }
            excludes = [
                    // "com.example.somewhere.*"
            ]
        }
    }
}

publishing {
    // Declare all publications
    publications {
        mavenJava(MavenPublication) { from components.java }
    }

    // Add repositories to publish to
    repositories {
        // GitHub Packages (https://pkg.github.com)
        maven {
            name 'GitHub'
            url "https://maven.pkg.github.com/${project.github_repo}"
            credentials {
                username System.getenv('GITHUB_ACTOR')
                password System.getenv('GITHUB_TOKEN')
            }
        }
    }
}
