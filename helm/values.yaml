# Default values for open-discogs-api.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/sweatboys/open-discogs-api
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# application settings.
# update service settings accordingly...:)
application:
  # application name.
  name: open-discogs-api
  api:
    # api server port
    port: 8080
  management:
    # management server port
    port: 8081
  # postgres configuration
  database:
    # postgres host address including port
    host: 'localhost:5432'
    # postgres username
    user: 'fill-me'
    # postgres password
    pass: 'fill-me'
  # url with FQDN for this deployment.
  url: 'http://localhost:8080'
  # custom environment values for container.
  # this mainly exists for supporting OTEL java-agent.
  # values set from above (i.e. api.port) will override settings from here,
  # so only put things that you missed from above settings.
  env:
    - name: OTEL_EXPORTER
      value: none
    - name: OTEL_SERVICE_NAME
      value: open-discogs-api
    - name: OTEL_RESOURCE_ATTRIBUTES
      value: none

# service settings
service:
  type: ClusterIP
  api:
    port: 8080
  management:
    port: 8081



ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
