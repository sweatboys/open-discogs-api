# Prepares, builds and publishes new releases
name: Release

# On changes to release branches
on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: 🙌 Prepare release
        id: release-please
        uses: google-github-actions/release-please-action@v3
        with:
          release-type: simple
          extra-files: |
            gradle.properties
            src/main/java/io.dsub.sweatboys.opendiscogs.api/Application.java
          pull-request-title-pattern: "chore${scope}: release${component} v${version}"
          package-name: ${{ env.GITHUB_REPOSITORY }}
    outputs:
      release_created: ${{ steps.release-please.outputs.release_created }}
      tag_name: ${{ steps.release-please.outputs.tag_name }}

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: release
    if: ${{ needs.release.outputs.release_created }}
    steps:
      - name: 🤪 Set up swap space
        uses: pierotofy/set-swap-space@49819abfb41bd9b44fb781159c033dba90353a7c
        with:
          swap-size-gb: 10
      - name: ✨ Checkout repository
        uses: actions/checkout@v3
      - name: ☕ Set up GraalVM JDK 17
        uses: graalvm/setup-graalvm@v1
        with:
          version: 'latest'
          java-version: '17'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          cache: 'gradle'
      - name: 🐘 Set up Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      - name: 🔨 Build
        run: ./gradlew build
      - name: 💻 Compile native
        run: ./gradlew nativeCompile
      - name: 🔑 Docker login
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: 🐳 Build and push
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}